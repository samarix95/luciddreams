{"version":3,"sources":["../node_modules/@material-ui/core/esm/Grid/Grid.js","img/sun.svg","img/moon.svg","img/aeronaut.svg","img/map.svg","../node_modules/@material-ui/core/esm/Container/Container.js","components/MainPage.js"],"names":["SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","React","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","module","exports","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","capitalize","_defineProperty","marginLeft","marginRight","paddingLeft","paddingRight","Object","values","acc","value","maxWidthXs","max","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl","connect","store","appTheme","getThemePalette","language","getLanguage","dialogConfirmData","getDialogConfirmData","dialogConfirmAction","getDialogConfirmAction","dispatch","bindActionCreators","setAppTheme","openDialogConfirm","setOpenDialogConfirm","resetDialogConfirm","setResetDialogConfirm","Styles","handleChangeTheme","palette","type","primary","main","secondary","error","useEffect","action","removeToken","MainPageContainer","MedImg","BackgroundImg","InvertOut","InvertIn","style","backgroundImage","Aeronaut","filter","position","BigImg","FadeIn","FadeOut","Sun","opacity","onClick","top","left","Moon","Map","marginTop8","MenuButtons","MainPageButton","fullWidth","variant","color","history","push","historyPath","Dreams","dict","buttons","MyDreams","AddDream","Technics","title","LogOut","message","texts"],"mappings":"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","file":"static/js/13.f092b692.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","module.exports = __webpack_public_path__ + \"static/media/sun.fcec037f.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.88e69b28.svg\";","module.exports = __webpack_public_path__ + \"static/media/aeronaut.8e3525f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.44233a1e.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport history from \"../history\";\r\nimport historyPath from \"../historyPath\";\r\nimport Styles from \"../styles\";\r\nimport dict from \"../dictionary\";\r\n\r\nimport { setAppTheme, setOpenDialogConfirm, setResetDialogConfirm } from \"../actions/actions\";\r\nimport { removeToken } from \"../functions/auth\";\r\nimport { getLanguage } from \"../reducers/languageReducer\";\r\nimport { getThemePalette } from \"../reducers/appThemeReducer\";\r\nimport { getDialogConfirmData, getDialogConfirmAction } from \"../reducers/dialogConfirmReducer\";\r\n\r\nimport Sun from \"../img/sun.svg\";\r\nimport Moon from \"../img/moon.svg\";\r\nimport Aeronaut from \"../img/aeronaut.svg\";\r\nimport Map from \"../img/map.svg\";\r\n\r\nfunction MainPage(props) {\r\n    const { setAppTheme, appTheme, language,\r\n        openDialogConfirm, resetDialogConfirm, dialogConfirmData, dialogConfirmAction\r\n    } = props;\r\n    const classes = Styles();\r\n\r\n    const handleChangeTheme = () => {\r\n        if (appTheme.palette.type === \"light\") {\r\n            setAppTheme({\r\n                palette: {\r\n                    type: \"dark\",\r\n                    primary: { main: \"#bdbdbd\" },\r\n                    secondary: { main: \"#f50057\" },\r\n                    error: { main: \"#cc0000\" }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            setAppTheme({\r\n                palette: {\r\n                    type: \"light\",\r\n                    primary: { main: \"#424242\" },\r\n                    secondary: { main: \"#f50057\" },\r\n                    error: { main: \"#cc0000\" }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClickDreams = () => {\r\n        history.push(historyPath.Dreams);\r\n    };\r\n\r\n    const handleClickAddDream = () => {\r\n        history.push(historyPath.AddDream);\r\n    };\r\n\r\n    const handleClickTechnics = () => {\r\n        history.push(historyPath.Technics);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        openDialogConfirm({\r\n            title: dict[language].buttons.LogOut,\r\n            message: dict[language].texts.LogOut,\r\n            action: \"log_out\"\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (typeof dialogConfirmAction === \"boolean\" && dialogConfirmData.action === \"log_out\") {\r\n            resetDialogConfirm();\r\n            if (dialogConfirmAction) {\r\n                removeToken();\r\n            }\r\n        }\r\n    }, [dialogConfirmAction, resetDialogConfirm, dialogConfirmData]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container className={classes.MainPageContainer}>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                            alignItems=\"flex-end\"\r\n                        >\r\n                            <Grid item>\r\n                                <ButtonBase className={clsx(classes.MedImg, classes.BackgroundImg, appTheme.palette.type === \"light\" ? classes.InvertOut : classes.InvertIn)}\r\n                                    style={{\r\n                                        backgroundImage: `url(${Aeronaut})`,\r\n                                        filter: appTheme.palette.type === \"dark\" ? \"invert(1)\" : \"invert(0)\"\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                    <ButtonBase className={clsx(classes.BigImg, classes.BackgroundImg, appTheme.palette.type === \"light\" ? classes.FadeIn : classes.FadeOut)}\r\n                                        style={{\r\n                                            backgroundImage: `url(${Sun})`,\r\n                                            opacity: \"0\"\r\n                                        }}\r\n                                        onClick={handleChangeTheme}\r\n                                    />\r\n                                    <ButtonBase className={clsx(classes.BigImg, classes.BackgroundImg, appTheme.palette.type === \"dark\" ? classes.FadeIn : classes.FadeOut)}\r\n                                        style={{\r\n                                            position: \"absolute\",\r\n                                            top: 0,\r\n                                            left: 0,\r\n                                            backgroundImage: `url(${Moon})`,\r\n                                            filter: \"invert(1)\"\r\n                                        }}\r\n                                        onClick={handleChangeTheme}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <ButtonBase className={clsx(classes.MedImg, classes.BackgroundImg, appTheme.palette.type === \"light\" ? classes.InvertOut : classes.InvertIn)}\r\n                                    style={{\r\n                                        backgroundImage: `url(${Map})`,\r\n                                        filter: appTheme.palette.type === \"dark\" ? \"invert(1)\" : \"invert(0)\"\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item className={classes.marginTop8}>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={1}\r\n                        >\r\n                            <Grid item className={`${classes.MenuButtons}`}>\r\n                                <Button className={`${classes.MainPageButton}`} fullWidth size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClickDreams}>\r\n                                    {dict[language].buttons.MyDreams}\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item className={`${classes.MenuButtons}`}>\r\n                                <Button className={`${classes.MainPageButton}`} fullWidth size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClickAddDream}>\r\n                                    {dict[language].buttons.AddDream}\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item className={`${classes.MenuButtons}`}>\r\n                                <Button className={`${classes.MainPageButton}`} fullWidth size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClickTechnics}>\r\n                                    {dict[language].buttons.Technics}\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item className={`${classes.MenuButtons}`}>\r\n                                <Button className={`${classes.MainPageButton}`} fullWidth size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleLogout}>\r\n                                    {dict[language].buttons.LogOut}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nMainPage.propTypes = {\r\n    language: PropTypes.string.isRequired,\r\n    appTheme: PropTypes.object.isRequired,\r\n    setAppTheme: PropTypes.func.isRequired,\r\n    dialogConfirmData: PropTypes.object.isRequired,\r\n    openDialogConfirm: PropTypes.func.isRequired,\r\n    resetDialogConfirm: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        appTheme: getThemePalette(store),\r\n        language: getLanguage(store),\r\n        dialogConfirmData: getDialogConfirmData(store),\r\n        dialogConfirmAction: getDialogConfirmAction(store)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    setAppTheme: setAppTheme,\r\n    openDialogConfirm: setOpenDialogConfirm,\r\n    resetDialogConfirm: setResetDialogConfirm\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainPage);"],"sourceRoot":""}