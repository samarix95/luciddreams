{"version":3,"sources":["styles.js","functions/fetch.js","components/StyledBreadcrumb.js","components/colourWheel/utils.js","components/colourWheel/hexStrings.js","components/colourWheel/index.js","components/addPages/AddLocation.js"],"names":["makeStyles","theme","root","position","flexGrow","stickyTop","top","zIndex","paper","breakpoints","up","marginLeft","marginRight","input","width","flex","MuiRteRead","backgroundColor","palette","text","main","padding","skeletonCard","minHeight","borderRadius","smallAvatar","spacing","height","largeAvatar","filterFab","bottom","right","addPostFab","flexSpaceBetween","display","flexDirection","justifyContent","margin1","margin","margin2","padding1","padding2","verticalCenter","transform","fullWidth","path","userSignIn","data","dispatch","setUserPending","fetch","method","headers","body","JSON","stringify","then","response","ok","Promise","resolve","json","reject","result","decode","setToken","token","setUserData","setOpenSnackbar","variant","message","dict","language","texts","Wellcome","history","push","historyPath","MainPage","catch","error","resetUserData","err","errors","userSignUp","fetchTechnics","setTechnicsPending","Accept","localStorage","setTechnicsData","setTechnicsError","fetchTags","setTagsPending","setTagsData","setTagsError","fetchUpdateTechnics","id","pathname","ReadTechnic","defaultData","fetchUserPosts","setUserPostsPending","create_user","setUserPostsData","setUserPostsError","fetchAddPost","setAddPostPending","setAddPostData","Dreams","setAddPostError","fetchUpdatePost","setUpdatePostPending","setUpdatePostData","ReadDream","setUpdatePostError","fetchDeletePost","setDeletePostPending","setDeletePostData","setDeletePostError","fetchPostComments","setPostCommentsPending","post_id","setPostCommentsData","setPostCommentsError","fetchAddPostComment","setAddPostCommentsPending","setAddPostCommentsData","setAddPostCommentsError","fetchUpdatePostComment","setUpdatePostCommentsPending","setUpdatePostCommentsData","setUpdatePostCommentsError","fetchSearchIcon","setSearchIconPending","length","setSearchIconData","Math","floor","random","setSearchIconError","fetchAddLocation","setAddLocationPending","setAddLocationData","backPath","setAddLocationError","withStyles","maxWidth","typography","fontWeightRegular","grey","boxShadow","shadows","emphasize","Chip","produceRgbShades","r","g","b","amount","shades","hsl","tinycolor","toHsl","i","l","toRgb","colourToRgbObj","colour","calculateBounds","min","max","inside","cursorPosFromCenter","getEffectiveRadius","trueRadius","lineWidth","fullCircle","PI","quarterCircle","componentToHex","c","hex","toString","ColourWheel","state","rgb","innerWheelOpen","centerCircleOpen","outerWheelBounds","innerWheelBounds","centerCircleBounds","outerWheelRadius","innerWheelRadius","centerCircleRadius","firstSpacerRadius","secondSpacerRadius","canvasEl","ctx","onCanvasHover","bind","onCanvasClick","clientX","clientY","radius","this","props","canvasPos","getBoundingClientRect","h","w","onCanvas","x","left","y","fromCenter","sqrt","clearRect","drawOuterWheel","drawSpacers","firstSpacerBounds","secondSpacerBounds","onRef","document","getElementById","getContext","preset","presetColour","setState","drawInnerWheel","drawCenterCircle","undefined","evt","getRelativeMousePos","style","cursor","outerWheelClicked","innerWheelClicked","onCenterCircleClick","evtPos","rgbaArr","getImageData","test","substring","split","join","Error","hexToRgb","callback","initCanvas","colours","effectiveRadius","rgbArr","map","forEach","beginPath","startAngle","endAngle","arc","strokeStyle","stroke","closePath","spacers","drawSpacer","spacerRadius","shadowColour","shadowBlur","shadowColor","animationPercentage","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","animated","rgbShades","drawShadesFunc","animateShadesFunc","animateShades","drawShades","fillStyle","fill","moveTo","lineTo","dynamicCursor","onClick","onMouseMove","Component","defaultProps","animate","innerWidth","connect","store","getLanguage","dialogConfirmData","getDialogConfirmData","dialogConfirmAction","getDialogConfirmAction","searchIconPending","getSearchIconPending","searchIconData","getSearchIconData","addLocationPending","getAddLocationPending","bindActionCreators","openDialogConfirm","setOpenDialogConfirm","resetDialogConfirm","setResetDialogConfirm","addLocation","location","breadcrumbs","classes","Styles","React","useState","name_ru","setTitleRu","name_en","setTitleEn","searchName","setSearchName","anchorElPopover","setAnchorElPopover","selectedIcon","setSelectedIcon","openColorDialog","setOpenColorDialog","iconColor","setIconColor","openPopover","Boolean","idPopover","handleClosePopover","handleBack","title","CancelCreating","DataWillLost","useEffect","className","Dialog","onClose","open","DialogContent","ref","Paper","Breadcrumbs","separator","aria-label","item","key","StyledBreadcrumb","component","color","label","backName","icon","urlBack","disabled","buttons","AddLocation","Container","Grid","container","direction","alignItems","Hidden","only","md","xs","sm","InputBase","spellCheck","placeholder","Title","Ru","value","inputProps","onChange","e","target","En","justify","FindIcon","search","currentTarget","replace","IconButton","name","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Typography","ENGLISH_WORDS_ONLY","CircularProgress","FormControl","Object","keys","InputLabel","Icon","Select","labelId","minWidth","event","MenuItem","Avatar","src","ButtonBase","IconColor","LinearProgress","Fragment","Button","size","Cancel","img_url","Save"],"mappings":"gLAEeA,iBAAW,SAAAC,GAAK,YAAK,CAChCC,KAAM,CACFC,SAAU,WACVC,SAAU,GAEdC,UAAW,CACPF,SAAU,SACVG,IAAK,EACLC,OAAQ,KAEZC,OAAK,GACDL,SAAU,YADT,cAEAF,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,MACZC,YAAa,QAJhB,cAMAX,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,MACZC,YAAa,QARhB,cAUAX,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,MACZC,YAAa,QAZhB,GAeLC,MAAO,CACHC,MAAO,OACPC,KAAM,GAEVC,WAAY,CACRC,gBAAiBhB,EAAMiB,QAAQC,KAAKC,KACpCC,QAAS,IAEbC,aAAc,CACVC,UAAW,IACXC,aAAc,GAElBC,YAAa,CACTX,MAAOb,EAAMyB,QAAQ,GACrBC,OAAQ1B,EAAMyB,QAAQ,IAE1BE,YAAa,CACTd,MAAOb,EAAMyB,QAAQ,GACrBC,OAAQ1B,EAAMyB,QAAQ,IAE1BG,UAAW,CACP1B,SAAU,QACV2B,OAAQ7B,EAAMyB,QAAQ,GACtBK,MAAO9B,EAAMyB,QAAQ,IAEzBM,WAAY,CACR7B,SAAU,QACV2B,OAAQ7B,EAAMyB,QAAQ,IACtBK,MAAO9B,EAAMyB,QAAQ,IAEzBO,iBAAkB,CACdC,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAEpBC,QAAS,CACLC,OAAQrC,EAAMyB,QAAQ,IAE1Ba,QAAS,CACLD,OAAQrC,EAAMyB,QAAQ,IAE1Bc,SAAU,CACNnB,QAASpB,EAAMyB,QAAQ,IAE3Be,SAAU,CACNpB,QAASpB,EAAMyB,QAAQ,IAE3BgB,eAAgB,CACZpC,IAAK,MACLqC,UAAW,oBAEfC,UAAW,CACP9B,MAAO,a,iCC/Ef,wgBAoBM+B,EAAO,2BAEAC,EAAa,SAACC,GACvB,OAAO,SAAAC,GAEH,OADAA,EAASC,eACFC,MAAML,EAAO,mBAAoB,CACpCM,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACF,IAAMC,EAASC,YAASF,EAAOG,OAC/BlB,EAASmB,YAAYH,IACrBhB,EAASoB,YAAgB,CAAEC,QAAS,UAAWC,QAASC,IAAKxB,EAAKyB,UAAUC,MAAMC,YAClFC,IAAQC,KAAKC,IAAYC,aAE5BC,OAAM,SAAAC,GACHhC,EAASiC,eACTD,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FI,EAAa,SAACrC,GACvB,OAAO,SAAAC,GAEH,OADAA,EAASC,eACFC,MAAML,EAAO,mBAAoB,CACpCM,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACF,IAAMC,EAASC,YAASF,EAAOG,OAC/BlB,EAASmB,YAAYH,IACrBhB,EAASoB,YAAgB,CAAEC,QAAS,UAAWC,QAASC,IAAKxB,EAAKyB,UAAUC,MAAMC,YAClFC,IAAQC,KAAKC,IAAYC,aAE5BC,OAAM,SAAAC,GACHhC,EAASiC,eACTD,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FK,EAAgB,WACzB,OAAO,SAAArC,GAEH,OADAA,EAASsC,eACFpC,MAAML,EAAO,yBAA0B,CAC1CM,OAAQ,MACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,cAEVC,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAASyC,YAAgB1B,OAE5BgB,OAAM,SAAAC,GACHhC,EAAS0C,eACTV,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASY,EAAIF,iBAMjEW,EAAY,WACrB,OAAO,SAAA3C,GAEH,OADAA,EAAS4C,eACF1C,MAAML,EAAO,WAAY,CAC5BM,OAAQ,MACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,cAEVC,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAAS6C,YAAY9B,OAExBgB,OAAM,SAAAC,GACHhC,EAAS8C,eACTd,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASY,EAAIF,iBAMjEe,EAAsB,SAAChD,GAChC,OAAO,SAAAC,GAEH,OADAA,EAASsC,eACFpC,MAAM,GAAD,OAAIL,EAAJ,wBAAwBE,EAAKiD,IAAM,CAC3C7C,OAAQ,MACRC,QAAU,CACN,eAAgB,mBAChB,OAAU,mBACV,MAASoC,aAAatB,OAE1Bb,KAAMC,KAAKC,UAAUR,EAAKA,QAEzBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAASoB,YAAgB,CAAEC,QAAS,UAAWC,QAASP,EAAOA,UAC/Df,EAASqC,KACTV,IAAQC,KAAK,CACTqB,SAAUpB,IAAYqB,YACtBC,YAAa,CACTH,GAAIjD,EAAKiD,SAIpBjB,OAAM,SAAAC,GACHhC,EAAS0C,eACTV,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FoB,EAAiB,SAACrD,GAC3B,OAAO,SAAAC,GAEH,OADAA,EAASqD,eACFnD,MAAM,GAAD,OAAIL,EAAJ,0BAA0BE,EAAKuD,aAAe,CACtDnD,OAAQ,MACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,cAEVC,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAASuD,YAAiBxC,OAE7BgB,OAAM,SAAAC,GACHhC,EAASwD,eACTxB,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FyB,EAAe,SAAC1D,GACzB,OAAO,SAAAC,GAEH,OADAA,EAAS0D,eACFxD,MAAM,GAAD,OAAIL,EAAJ,aAAqB,CAC7BM,OAAQ,OACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAAS2D,YAAe5C,IACxBY,IAAQC,KAAKC,IAAY+B,WAE5B7B,OAAM,SAAAC,GACHhC,EAAS6D,eACT7B,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5F8B,EAAkB,SAAC/D,GAC5B,OAAO,SAAAC,GAEH,OADAA,EAAS+D,eACF7D,MAAM,GAAD,OAAIL,EAAJ,qBAAqBE,EAAKiD,IAAM,CACxC7C,OAAQ,MACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAASgE,YAAkBjD,IAC3Bf,EAASoD,EAAe,CAAE5B,SAAUzB,EAAKyB,SAAU8B,YAAavD,EAAKuD,eACrE3B,IAAQC,KAAK,CACTqB,SAAUpB,IAAYoC,UACtBd,YAAa,CACTH,GAAIjD,EAAKiD,SAIpBjB,OAAM,SAAAC,GACHhC,EAASkE,eACTlC,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FmC,EAAkB,SAACpE,GAC5B,OAAO,SAAAC,GAEH,OADAA,EAASoE,eACFlE,MAAM,GAAD,OAAIL,EAAJ,qBAAqBE,EAAKiD,IAAM,CACxC7C,OAAQ,SACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,cAEVC,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAASqE,YAAkBtD,IAC3Bf,EAASoD,EAAe,CAAE5B,SAAUzB,EAAKyB,SAAU8B,YAAavD,EAAKuD,eACrE3B,IAAQC,KAAKC,IAAY+B,WAE5B7B,OAAM,SAAAC,GACHhC,EAASsE,eACTtC,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FuC,EAAoB,SAACxE,GAC9B,OAAO,SAAAC,GAEH,OADAA,EAASwE,eACFtE,MAAM,GAAD,OAAIL,EAAJ,wBAAwBE,EAAK0E,SAAW,CAChDtE,OAAQ,MACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,cAEVC,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAAS0E,YAAoB3D,OAEhCgB,OAAM,SAAAC,GACHhC,EAAS2E,eACT3C,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5F4C,EAAsB,SAAC7E,GAChC,OAAO,SAAAC,GAEH,OADAA,EAAS6E,eACF3E,MAAM,GAAD,OAAIL,EAAJ,gBAAwB,CAChCM,OAAQ,OACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAAS8E,YAAuB/D,IAChCf,EAASuE,EAAkB,CAAE/C,SAAUzB,EAAKyB,SAAUiD,QAAS1E,EAAK0E,cAEvE1C,OAAM,SAAAC,GACHhC,EAAS+E,eACT/C,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FgD,EAAyB,SAACjF,GACnC,OAAO,SAAAC,GAEH,OADAA,EAASiF,eACF/E,MAAM,GAAD,OAAIL,EAAJ,wBAAwBE,EAAKiD,IAAM,CAC3C7C,OAAQ,MACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAASkF,YAA0BnE,IACnCf,EAASuE,EAAkB,CAAE/C,SAAUzB,EAAKyB,SAAUiD,QAAS1E,EAAK0E,cAEvE1C,OAAM,SAAAC,GACHhC,EAASmF,eACTnD,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5FoD,EAAkB,SAAlBA,EAAmBrF,GAC5B,OAAO,SAAAC,GAEH,OADAA,EAASqF,eACFnF,MAAM,GAAD,OAAIL,EAAJ,aAAqB,CAC7BM,OAAQ,OACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACEA,EAAOuE,OAAS,EAAGtF,EAASuF,YAAkBxE,KAE9Cf,EAASoB,YAAgB,CAAEC,QAAS,OAAQC,QAASC,IAAKxB,EAAKyB,UAAUC,MAApB,kBAAqC+D,KAAKC,MAAsB,EAAhBD,KAAKE,eAC1G1F,EAASoF,EAAgBrF,QAGhCgC,OAAM,SAAAC,GACHhC,EAAS2F,eACT3D,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,kBAM5F4D,EAAmB,SAAC7F,GAC7B,OAAO,SAAAC,GAEH,OADAA,EAAS6F,eACF3F,MAAM,GAAD,OAAIL,EAAJ,YAAoB,CAC5BM,OAAQ,OACRC,QAAU,CACNmC,OAAQ,mBACR,eAAgB,mBAChB,MAASC,aAAatB,OAE1Bb,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GACF,OAAKA,EAASC,GACFC,QAAQC,QAAQH,EAASI,QADZF,QAAQG,OAAOL,MAG3CD,MAAK,SAAAO,GACFf,EAAS8F,YAAmB/E,IAC5BY,IAAQC,KAAK7B,EAAKgG,aAErBhE,OAAM,SAAAC,GACHhC,EAASgG,eACThE,EAAMnB,OAAOL,MAAK,SAAA0B,GACdlC,EAASoB,YAAgB,CAAEC,QAAS,QAASC,QAASC,IAAKxB,EAAKyB,UAAUW,OAAOD,EAAIF,mB,qEC/a1FiE,iBAAW,SAAChJ,GAAD,YAAY,CAClCC,MAAI,mBACCD,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BwI,SAAU,MAFd,cAICjJ,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BwI,SAAU,SALd,2BAOY,QAPZ,uBAQQjJ,EAAMyB,QAAQ,IARtB,2BASYzB,EAAMkJ,WAAWC,mBAT7B,cAUA,mBAAoB,CAChBnI,gBAAiBhB,EAAMiB,QAAQmI,KAAK,OAXxC,cAaA,WAAY,CACRC,UAAWrJ,EAAMsJ,QAAQ,GACzBtI,gBAAiBuI,YAAUvJ,EAAMiB,QAAQmI,KAAK,KAAM,OAfxD,MADOJ,CAmBXQ,M,iWCpBG,SAASC,EAAiBC,EAAGC,EAAGC,EAAGC,GAKtC,IAJA,IAAIC,EAAS,GAEPC,EAAMC,IAAU,OAAD,OAAQN,EAAR,aAAcC,EAAd,aAAoBC,EAApB,MAA0BK,QAEtCC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAIL,EAC5BE,EAAII,EAAI,GAAMD,EACdJ,EAAOnF,KAAKqF,IAAUD,GAAKK,SAG/B,OAAON,EAGJ,SAASO,EAAeC,GAC3B,OAAON,IAAUM,GAAQF,QAGtB,SAASG,EAAgBC,EAAKC,GACjC,MAAO,CACHC,OAAQ,SAACC,GACL,OAAOA,GAAuBH,GAAOG,GAAuBF,IAUjE,SAASG,EAAmBC,EAAYC,GAC3C,OAAOD,EAAaC,EAAY,ECjCrB,ICMTC,EAAa,EAAIxC,KAAKyC,GACtBC,EAAgBF,EAAa,EAEnC,SAASG,EAAeC,GACpB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAsB,IAAfD,EAAI/C,OAAe,IAAM+C,EAAMA,E,IAgBpCE,E,kDACF,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,IAAK,KACLC,gBAAgB,EAChBC,kBAAkB,GAItB,EAAKC,iBAAmB,KACxB,EAAKC,iBAAmB,KACxB,EAAKC,mBAAqB,KAE1B,EAAKC,iBAAmB,KACxB,EAAKC,iBAAmB,KACxB,EAAKC,mBAAqB,KAC1B,EAAKC,kBAAoB,KACzB,EAAKC,mBAAqB,KAG1B,EAAKC,SAAW,KAChB,EAAKC,IAAM,KAGX,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBA1BX,E,gEA8BME,EAASC,GAAU,IAC3BC,EAAWC,KAAKC,MAAhBF,OAEFG,EAAYF,KAAKR,SAASW,wBAC1BC,EAAa,EAATL,EACJM,EAAa,EAATN,EAGJO,EAAW,CACbC,EAAGV,EAAUK,EAAUM,KACvBC,EAAGX,EAAUI,EAAUxM,KAO3B,MAAO,CACHgN,WAJe9E,KAAK+E,MAAML,EAASC,EAAKF,EAAI,IAAOC,EAASC,EAAKF,EAAI,IAAOC,EAASG,EAAKL,EAAI,IAAOE,EAASG,EAAKL,EAAI,IAKvHE,c,mCAIM,IACFP,EAAWC,KAAKC,MAAhBF,OAEF7L,EAAiB,EAAT6L,EACRhL,EAAkB,EAATgL,EAEfC,KAAKP,IAAImB,UAAU,EAAG,EAAG1M,EAAOa,GAEhCiL,KAAKa,iBACLb,KAAKc,gB,2CAIa,IAAD,EACsBd,KAAKC,MAApCF,EADS,EACTA,OAAQ5B,EADC,EACDA,UAAW1J,EADV,EACUA,QAG3BuL,KAAKb,iBAAmBY,EACxBC,KAAKZ,iBAAmBY,KAAKb,iBAAmBhB,EAAY1J,EAC5DuL,KAAKX,mBAAqBW,KAAKZ,iBAAmBjB,EAAY1J,EAC9DuL,KAAKV,kBAAoBU,KAAKb,iBAAmBhB,EACjD6B,KAAKT,mBAAqBS,KAAKZ,iBAAmBjB,EAGlD6B,KAAKhB,iBAAmBpB,EAAgBmC,EAAS5B,EAAW4B,GAC5DC,KAAKf,iBAAmBrB,EAAgBoC,KAAKZ,iBAAmBjB,EAAW6B,KAAKZ,kBAChFY,KAAKd,mBAAqBtB,EAAgB,EAAGoC,KAAKX,oBAClDW,KAAKe,kBAAoBnD,EAAgBoC,KAAKV,kBAAoB7K,EAASuL,KAAKV,mBAChFU,KAAKgB,mBAAqBpD,EAAgBoC,KAAKT,mBAAqB9K,EAASuL,KAAKT,sB,0CAGjE,IAAD,OAQhB,GANAS,KAAKC,MAAMgB,MAAMjB,MAGjBA,KAAKR,SAAW0B,SAASC,eAAe,iBACxCnB,KAAKP,IAAMO,KAAKR,SAAS4B,WAAW,MAEhCpB,KAAKC,MAAMoB,OAAQ,CACnB,IAAMxC,EAAMnB,EAAesC,KAAKC,MAAMqB,cACtCtB,KAAKuB,SAAS,CAAE1C,QAAO,WACnB,EAAKgC,iBACL,EAAKW,iBACL,EAAKC,mBACL,EAAKX,sBAGTd,KAAKa,iBACLb,KAAKc,gB,6CAKTd,KAAKC,MAAMgB,WAAMS,K,uCAIgB,IAArB7B,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACf6B,EAAM3B,KAAK4B,oBAAoB/B,EAASC,GAG1CE,KAAKhB,iBAAiBjB,OAAO4D,EAAIjB,aAG5BV,KAAKf,iBAAiBlB,OAAO4D,EAAIjB,aAAeV,KAAKpB,MAAME,eAFhEkB,KAAKR,SAASqC,MAAMC,OAAS,YAKxB9B,KAAKd,mBAAmBnB,OAAO4D,EAAIjB,aAAeV,KAAKpB,MAAMG,iBAClEiB,KAAKR,SAASqC,MAAMC,OAAS,UAG7B9B,KAAKR,SAASqC,MAAMC,OAAS,S,uCAIA,IAArBjC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACf6B,EAAM3B,KAAK4B,oBAAoB/B,EAASC,GAG1CE,KAAKhB,iBAAiBjB,OAAO4D,EAAIjB,YACjCV,KAAK+B,kBAAkBJ,EAAIrB,UAEtBN,KAAKf,iBAAiBlB,OAAO4D,EAAIjB,YACtCV,KAAKgC,kBAAkBL,EAAIrB,UAEtBN,KAAKd,mBAAmBnB,OAAO4D,EAAIjB,aACxCV,KAAKiC,wB,wCAKKC,GAAS,IAAD,OAEhBC,EAAUnC,KAAKP,IAAI2C,aAAaF,EAAO3B,EAAG2B,EAAOzB,EAAG,EAAG,GAAGtK,KAF1C,cAGJgM,EAHI,GAKhBtD,EAAM,CAAE9B,EALQ,KAKLC,EALK,KAKFC,EALE,MAOtB+C,KAAKuB,SAAS,CACV1C,MACAC,gBAAgB,EAChBC,kBAAkB,IACnB,WACC,EAAKyC,iBACL,EAAKC,wB,wCAIKS,GAAS,IAAD,OAChBC,EAAUnC,KAAKP,IAAI2C,aAAaF,EAAO3B,EAAG2B,EAAOzB,EAAG,EAAG,GAAGtK,KAD1C,cAEJgM,EAFI,GAIhBtD,EAAM,CAAE9B,EAJQ,KAILC,EAJK,KAIFC,EAJE,MAMtB+C,KAAKuB,SAAS,CAAE1C,MAAKE,kBAAkB,IAAQ,WAAQ,EAAK0C,wB,4CAGzC,IACX5C,EAAQmB,KAAKpB,MAAbC,IACRmB,KAAKC,MAAMgC,oBAAoB,IAAM1D,EAAeM,EAAI9B,GAAKwB,EAAeM,EAAI7B,GAAKuB,EAAeM,EAAI5B,M,sCAG5FwB,GAAM,IAAD,OACXI,EAAMnB,EA/LpB,SAAkBe,GACd,IAAID,EACJ,GAAI,2BAA2B6D,KAAK5D,GAMhC,OAJiB,KADjBD,EAAIC,EAAI6D,UAAU,GAAGC,MAAM,KACrB7G,SACF8C,EAAI,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAGlC,QAAU,EADjBA,EAAI,KAAOA,EAAEgE,KAAK,MACM,GAAM,IAAMhE,GAAK,EAAK,IAAS,IAAJA,GAASgE,KAAK,KAAO,MAE5E,MAAM,IAAIC,MAAM,WAqLeC,CAASjE,IACpCuB,KAAKuB,SAAS,CAAE1C,QAAO,WACnB,EAAKgC,iBACL,EAAKW,iBACL,EAAKC,mBACL,EAAKX,mB,8BAIY,IAAD,OAAlB6B,EAAkB,wDACpB3C,KAAKuB,SAAS,CACV1C,IAAK,KACLC,gBAAgB,EAChBC,kBAAkB,IACnB,WAEC,EAAK6D,aACDD,GAAUA,S,uCAKJ,IAAD,SAE0B3C,KAAKC,MAApCF,EAFK,EAELA,OAAQ8C,EAFH,EAEGA,QAAS1E,EAFZ,EAEYA,UACnBpJ,EAAkB,EAATgL,EACT7L,EAAiB,EAAT6L,EAGR+C,EAAkB7E,EAAmB8B,EAAQ5B,GAG7C4E,EAASF,EAAQG,KAAI,SAAArF,GAAM,OAAID,EAAeC,MAEpDoF,EAAOE,SAAQ,SAACpE,EAAKtB,GACjB,EAAKkC,IAAIyD,YAGT,IAAMC,EAAc/E,EAAa2E,EAAOrH,OAAU6B,EAC5C6F,EAAYhF,EAAa2E,EAAOrH,QAAW6B,EAAI,GAErD,EAAKkC,IAAI4D,IAAInP,EAAQ,EAAGa,EAAS,EAAG+N,EAAiBK,EAAYC,GACjE,EAAK3D,IAAItB,UAAYA,EAGrB,EAAKsB,IAAI6D,YAAT,cAA8BzE,EAAI9B,EAAlC,aAAwC8B,EAAI7B,EAA5C,aAAkD6B,EAAI5B,EAAtD,KACA,EAAKwC,IAAI8D,SACT,EAAK9D,IAAI+D,iB,oCAKTxD,KAAKC,MAAMwD,UACXzD,KAAK0D,WAAW1D,KAAKV,mBACrBU,KAAK0D,WAAW1D,KAAKT,uB,iCAIlBoE,GAAe,IAAD,EACsD3D,KAAKC,MAAxEF,EADa,EACbA,OAAQtL,EADK,EACLA,QADK,IACIgP,QAAW9F,EADf,EACeA,OAAQiG,EADvB,EACuBA,aAAcC,EADrC,EACqCA,WAEpD9O,EAAkB,EAATgL,EACT7L,EAAiB,EAAT6L,EAER+C,EAAkB7E,EAAmB0F,EAAclP,GAEzDuL,KAAKP,IAAIyD,YAETlD,KAAKP,IAAI4D,IAAInP,EAAQ,EAAGa,EAAS,EAAG+N,EAAiB,EAAG1E,GACxD4B,KAAKP,IAAItB,UAAY1J,EAErBuL,KAAKP,IAAIqE,YAAcF,EACvB5D,KAAKP,IAAIoE,WAAaA,EACtB7D,KAAKP,IAAI6D,YAAc3F,EACvBqC,KAAKP,IAAI8D,SACTvD,KAAKP,IAAI+D,YAGTxD,KAAKP,IAAIqE,YAAc,gB,uCAGc,IAA1BC,EAAyB,uDAAH,EAE7BC,EAAwBC,OAAOD,uBAAyBC,OAAOC,0BAA4BD,OAAOE,6BAA+BF,OAAOG,wBAC5IH,OAAOD,sBAAwBA,EAHK,MAKPhE,KAAKpB,MAA1BC,IAAO9B,EALqB,EAKrBA,EAAGC,EALkB,EAKlBA,EAAGC,EALe,EAKfA,EALe,EAMY+C,KAAKC,MAA7CF,EAN4B,EAM5BA,OAAQ5B,EANoB,EAMpBA,UAAWhB,EANS,EAMTA,OAAQkH,EANC,EAMDA,SAE7BtP,EAAkB,EAATgL,EACT7L,EAAiB,EAAT6L,EAER+C,EAAkB7E,EAAmB+B,KAAKZ,iBAAkBjB,GAGlE6B,KAAKP,IAAImB,UAAU,EAAG,EAAG1M,EAAOa,GAEhCiL,KAAKa,iBACLb,KAAKc,cAEL,IAAMwD,EAAYxH,EAAiBC,EAAGC,EAAGC,EAAGE,GAG5C,SAASoH,IAAkB,IAAD,OACtBD,EAAUrB,SAAQ,SAACpE,EAAKtB,GACpB,EAAKkC,IAAIyD,YAET,IAAMC,EAAe/E,EAAakG,EAAU5I,OAAU6B,EAAKe,EACrD8E,EAAahF,EAAakG,EAAU5I,QAAW6B,EAAI,GAAO,GAAS3B,KAAKyC,GAE9E,EAAKoB,IAAI4D,IAAInP,EAAQ,EAAGa,EAAS,EAAG+N,EAAiBK,EAAYC,GACjE,EAAK3D,IAAItB,UAAYA,EAGrB,EAAKsB,IAAI6D,YAAT,cAA8BzE,EAAI9B,EAAlC,aAAwC8B,EAAI7B,EAA5C,aAAkD6B,EAAI5B,EAAtD,KACA,EAAKwC,IAAI8D,SACT,EAAK9D,IAAI+D,eAIjB,SAASgB,IAAqB,IAAD,OACzBF,EAAUrB,SAAQ,SAACpE,EAAKtB,GACpB,EAAKkC,IAAIyD,YAET,IAAMC,EAAe/E,EAAakG,EAAU5I,OAAU6B,EAAKe,EACrD8E,EAAahF,EAAakG,EAAU5I,QAAW6B,EAAI,GAAO,GAAS3B,KAAKyC,GAE9E,EAAKoB,IAAI4D,IAAInP,EAAQ,EAAGa,EAAS,EAAG+N,EAAiBK,EAAYC,GACjE,EAAK3D,IAAItB,UAAYA,EAAY4F,EAGjC,EAAKtE,IAAI6D,YAAT,cAA8BzE,EAAI9B,EAAlC,aAAwC8B,EAAI7B,EAA5C,aAAkD6B,EAAI5B,EAAtD,KACA,EAAKwC,IAAI8D,SACT,EAAK9D,IAAI+D,gBAIbO,GAAwB,IAGE,GAAGC,EAAsBS,GAGvD,IAAIA,EAAgBD,EAAkB7E,KAAKK,MACvC0E,EAAaH,EAAe5E,KAAKK,MAEjCqE,EACAI,IAGAC,M,yCAIY,IACR7F,EAAQmB,KAAKpB,MAAbC,IACAkB,EAAWC,KAAKC,MAAhBF,OAEFhL,EAAkB,EAATgL,EACT7L,EAAiB,EAAT6L,EACdC,KAAKP,IAAItB,UAAY,EAErB6B,KAAKP,IAAIyD,YACTlD,KAAKP,IAAI4D,IAAInP,EAAQ,EAAGa,EAAS,EAAGiL,KAAKX,mBAAoB,EAAG,EAAIzD,KAAKyC,IACzE2B,KAAKP,IAAIkF,UAAT,cAA4B9F,EAAI9B,EAAhC,aAAsC8B,EAAI7B,EAA1C,aAAgD6B,EAAI5B,EAApD,KACA+C,KAAKP,IAAImF,OACT5E,KAAKP,IAAItB,UAAY,GACrB6B,KAAKP,IAAI6D,YAAT,cAA8BzE,EAAI9B,EAAlC,aAAwC8B,EAAI7B,EAA5C,aAAkD6B,EAAI5B,EAAtD,KACA+C,KAAKP,IAAI8D,SACTvD,KAAKP,IAAI+D,YAETxD,KAAKP,IAAIyD,YACTlD,KAAKP,IAAIoF,OAAO9E,EAASA,EAAS,GAAIA,GACtCC,KAAKP,IAAIqF,OAAO/E,EAASA,EAAS,GAAIA,GACtCC,KAAKP,IAAIqF,OAAO/E,EAAQA,EAASA,EAAS,IAC1CC,KAAKP,IAAIqF,OAAO/E,EAASA,EAAS,GAAIA,EAASA,EAAS,IACxDC,KAAKP,IAAI6D,YAAc,QACvBtD,KAAKP,IAAItB,UAAY,EACrB6B,KAAKP,IAAI8D,W,+BAGH,IAAD,EAC6BvD,KAAKC,MAA/BF,EADH,EACGA,OAER,OAHK,EACWgF,cAIR,4BACI3L,GAAG,gBACH4L,QAAShF,KAAKJ,cACdqF,YAAajF,KAAKN,cAClBxL,MAAK,UAAc,EAAT6L,EAAL,MACLhL,OAAM,UAAc,EAATgL,EAAL,QAGN,4BACI3G,GAAG,gBACH4L,QAAShF,KAAKJ,cACd1L,MAAK,UAAc,EAAT6L,EAAL,MACLhL,OAAM,UAAc,EAATgL,EAAL,Y,GAxXJmF,aA6Y1BvG,EAAYwG,aAAe,CACvBtC,QDzaW,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WC0ZA1F,OAAQ,GACR1I,QAAS,EACTsQ,eAAe,EACf1D,QAAQ,EACR+D,SAAS,GAGEzG,Q,4ECvYToB,IAAUkE,OAAOoB,WAAa,KAAO,EAAI,IAAM,KAAQpB,OAAOoB,WAAa,KAAO,EAwVzEC,uBAlBS,SAAAC,GACpB,MAAO,CACH3N,SAAU4N,YAAYD,GACtBE,kBAAmBC,YAAqBH,GACxCI,oBAAqBC,YAAuBL,GAC5CM,kBAAmBC,aAAqBP,GACxCQ,eAAgBC,aAAkBT,GAClCU,mBAAoBC,aAAsBX,OAIvB,SAACnP,GAAD,OAAc+P,6BAAmB,CACxDC,kBAAmBC,IACnBC,mBAAoBC,IACpB/K,gBAAiBA,IACjBgL,YAAaxK,KACd5F,KAEYkP,EAtVf,SAAqBrF,GAAQ,IACjBrI,EAGgCqI,EAHhCrI,SACJwO,EAEoCnG,EAFpCmG,kBAAmBE,EAEiBrG,EAFjBqG,mBAAoBb,EAEHxF,EAFGwF,kBAAmBE,EAEtB1F,EAFsB0F,oBAC1DE,EACoC5F,EADpC4F,kBAAmBE,EACiB9F,EADjB8F,eAAgBvK,EACCyE,EADDzE,gBACnCgL,EAAoCvG,EAApCuG,YAAaP,EAAuBhG,EAAvBgG,mBAJO,EAKUhG,EAAMwG,SAASlN,YAAzCmN,EALgB,EAKhBA,YAAavK,EALG,EAKHA,SACfwK,EAAUC,cANQ,EAQMC,IAAMC,SAAS,IARrB,mBAQjBC,EARiB,KAQRC,EARQ,OASMH,IAAMC,SAAS,IATrB,mBASjBG,EATiB,KASRC,EATQ,OAUYL,IAAMC,SAAS,IAV3B,mBAUjBK,EAViB,KAULC,GAVK,QAWsBP,IAAMC,SAAS,MAXrC,qBAWjBO,GAXiB,MAWAC,GAXA,SAYgBT,IAAMC,SAAS,IAZ/B,qBAYjBS,GAZiB,MAYHC,GAZG,SAasBX,IAAMC,UAAS,GAbrC,qBAajBW,GAbiB,MAaAC,GAbA,SAcUb,IAAMC,SAAS,WAdzB,qBAcjBa,GAdiB,MAcNC,GAdM,MA2BlBC,GAAcC,QAAQT,IACtBU,GAAYD,QAAQT,IAAmB,sBAAmB3F,EAE1DsG,GAAqB,WACvBV,GAAmB,OA2BjBW,GAAa,SAAChS,GAChBmQ,EAAkB,CACd8B,MAAOvQ,IAAKC,GAAUC,MAAMsQ,eAC5BzQ,QAASC,IAAKC,GAAUC,MAAMuQ,aAC9BnS,KAAMA,KAwBd,OATA4Q,IAAMwB,WAAU,WACuB,mBAAxB1C,IACPW,IACIX,GACA5N,IAAQC,KAAKyN,EAAkBxP,SAGxC,CAAC0P,EAAqBW,EAAoBb,IAGzC,yBAAK6C,UAAW3B,EAAQrT,MACpB,kBAACiV,EAAA,EAAD,CAAQC,QAvCe,WAC3Bd,IAAmB,IAsC0Be,KAAMhB,IAC3C,kBAACiB,EAAA,EAAD,CAAeJ,UAAW3B,EAAQ/Q,UAC9B,kBAAC,EAAD,CACImK,OAAQA,GACRtL,QAAS,GACT0J,UAAW,GACX8D,oBAAqB,SAACxD,GAAD,OAxCrCmJ,GAwCuDnJ,QAvCvDiJ,IAAmB,IAwCHzG,MAAO,SAAA0H,GAAG,OAAKhK,EAAYA,YAAcgK,GACzClF,QAAS,CACL9F,OAAQ,YACRiG,aAAc,OACdC,WAAY,GAEhBxC,QAAM,EACNC,aAAcqG,GACdtD,UAAQ,MAIpB,kBAACuE,EAAA,EAAD,CAAON,UAAS,UAAK3B,EAAQ/Q,SAAb,YAAyB+Q,EAAQlT,YAC7C,kBAACoV,EAAA,EAAD,CAAaC,UAAU,SAAIC,aAAW,cACjCrC,EAAY1D,KAAI,SAACgG,EAAMC,GAAP,OACb,kBAACC,EAAA,EAAD,CAAkBD,IAAKA,EAAKE,UAAU,IAAIC,MAAM,UAAUC,MAAOL,EAAKM,SAAUC,KAAMP,EAAKO,KAAMvE,QAAS,kBAAMiD,GAAWe,EAAKQ,eAEpI,kBAACN,EAAA,EAAD,CAAkBC,UAAU,IAAIC,MAAM,UAAUK,UAAU,EAAMJ,MAAO1R,IAAKC,GAAU8R,QAAQC,gBAGtG,kBAACC,EAAA,EAAD,CAAWtB,UAAS,UAAK3B,EAAQhR,UAC7B,kBAACkU,EAAA,EAAD,CAAMC,WAAS,EACXC,UAAU,SACVC,WAAW,UACXlV,QAAS,GAET,kBAAC+U,EAAA,EAAD,CAAMb,MAAI,GACN,kBAACa,EAAA,EAAD,CAAMC,WAAS,EAAChV,QAAS,GACrB,kBAACmV,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACjB,kBAACL,EAAA,EAAD,CAAMb,MAAI,EAACmB,GAAI,KAEnB,kBAACN,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,GAAIC,GAAI,EAAGF,GAAI,GAC1B,kBAACvB,EAAA,EAAD,CAAON,UAAS,UAAK3B,EAAQlR,QAAb,YAAwBkR,EAAQ/Q,WAC5C,kBAAC0U,EAAA,EAAD,CAAWtU,WAAS,EAChBuU,YAAY,EACZC,YAAa7S,IAAKC,GAAUC,MAAM4S,MAAQ,KAAO9S,IAAKC,GAAUC,MAAM6S,GAAK,IAC3EC,MAAO5D,EACP6D,WAAY,CAAE,aAAc,qBAC5BC,SAAU,SAAAC,GAAC,OAAI9D,EAAW8D,EAAEC,OAAOJ,YAI/C,kBAACd,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,GAAIC,GAAI,EAAGF,GAAI,GAC1B,kBAACvB,EAAA,EAAD,CAAON,UAAS,UAAK3B,EAAQlR,QAAb,YAAwBkR,EAAQ/Q,WAC5C,kBAAC0U,EAAA,EAAD,CAAWtU,WAAS,EAChBuU,YAAY,EACZC,YAAa7S,IAAKC,GAAUC,MAAM4S,MAAQ,KAAO9S,IAAKC,GAAUC,MAAMmT,GAAK,IAC3EL,MAAO1D,EACP2D,WAAY,CAAE,aAAc,qBAC5BC,SAAU,SAAAC,GAAC,OAAI5D,EAAW4D,EAAEC,OAAOJ,YAI/C,kBAACV,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACjB,kBAACL,EAAA,EAAD,CAAMb,MAAI,EAACmB,GAAI,OAI3B,kBAACN,EAAA,EAAD,CAAMb,MAAI,GACN,kBAACa,EAAA,EAAD,CAAMC,WAAS,EAAChV,QAAS,GACrB,kBAACmV,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACjB,kBAACL,EAAA,EAAD,CAAMb,MAAI,EAACmB,GAAI,KAEnB,kBAACN,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,GAAIC,GAAI,EAAGF,GAAI,GAC1B,kBAACvB,EAAA,EAAD,CAAON,UAAS,UAAK3B,EAAQlR,QAAb,YAAwBkR,EAAQ/Q,WAC5C,kBAACiU,EAAA,EAAD,CAAMC,WAAS,EACXC,UAAU,MACVkB,QAAQ,gBACRjB,WAAW,UAEX,kBAACH,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,IACX,kBAACE,EAAA,EAAD,CAAWtU,WAAS,EAChBuU,YAAY,EACZd,SAAU5D,EACV2E,YAAa7S,IAAKC,GAAUC,MAAMqT,SAAW,KAAOvT,IAAKC,GAAUC,MAAMmT,GAAK,IAC9EL,MAAOxD,EACPyD,WAAY,CAAE,aAAc,aAC5BC,SA5JhB,SAACC,IACqB,IAA1CA,EAAEC,OAAOJ,MAAMQ,OAAO,8CACtB7D,GAAmBwD,EAAEM,eACrBhE,GAAc0D,EAAEC,OAAOJ,MAAMU,QAAQ,4CAAe,OAGpDrD,KACAZ,GAAc0D,EAAEC,OAAOJ,YAwJK,kBAACd,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,GACX,kBAACkB,EAAA,EAAD,CAAYhD,UAAW3B,EAAQ/Q,SAC3BmT,aAAW,SACXwB,YAAY,EACZd,WAAUtC,EAAWzL,OAAS,IAAMmK,GACpCb,QAlJzB,WACfxJ,EAAgB,CACZ+P,KAAMpE,EAAWkE,QAAQ,KAAM,OAC/BzT,SAAUA,MAiJ0B,kBAAC,IAAD,SAIZ,kBAAC4T,EAAA,EAAD,CACIpS,GAAI2O,GACJU,KAAMZ,GACN4D,SAAUpE,GACVmB,QAASR,GACT0D,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,WAGhB,kBAACE,EAAA,EAAD,CAAYxD,UAAW3B,EAAQ/Q,UAC1B+B,IAAKC,GAAUW,OAAOwT,uBAKvC,kBAAClC,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,GAAIC,GAAI,EAAGF,GAAI,GAC1B,kBAACvB,EAAA,EAAD,CAAON,UAAS,UAAK3B,EAAQlR,QAAb,YAAwBkR,EAAQ/Q,WAC5C,kBAACiU,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVkB,QAAQ,eACRjB,WAAW,SACXlV,QAAS,GAET,kBAAC+U,EAAA,EAAD,CAAMb,MAAI,GACJnD,EA0BI,kBAACmG,EAAA,EAAD,MAzBA,kBAACC,EAAA,EAAD,CACExU,QAAQ,WACRgS,SAAiD,IAAvCyC,OAAOC,KAAKpG,GAAgBrK,QAEtC,kBAAC0Q,EAAA,EAAD,CAAYhT,GAAG,eACVzB,IAAKC,GAAUC,MAAMwU,MAE1B,kBAACC,EAAA,EAAD,CACIC,QAAQ,cACR1K,MAAO,CACH2K,SAAU,KAEd7B,MAAOpD,GACPsD,SA7LtB,SAAC4B,GAC3BjF,GAAgBiF,EAAM1B,OAAOJ,SA8LoBuB,OAAOC,KAAKpG,GAAgBrK,OAAS,EAChCqK,EAAe/C,KAAI,SAACgG,EAAMC,GAAP,OACjB,kBAACyD,EAAA,EAAD,CAAUzD,IAAKA,EAAK0B,MAAO3B,GACvB,kBAAC2D,EAAA,EAAD,CAAQlV,QAAQ,UAAUoK,MAAO,CAAExN,gBAAiBsT,IAAaiF,IAAK5D,QAG5E,kBAAC0D,EAAA,EAAD,CAAU/B,MAAO,QAOvC,kBAACd,EAAA,EAAD,CAAMb,MAAI,EAACnH,MAAO,CAAEjN,aAAc,EAAGP,gBAAiBsT,KAClD,kBAACkF,EAAA,EAAD,CAAY7H,QAzMtB,WAC1B0C,IAAmB,KAyMqB,kBAACoE,EAAA,EAAD,CAAYjK,MAAO,CAAEuH,MAAO,UACvBzR,IAAKC,GAAUC,MAAMiV,gBAO9C,kBAAC7C,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACjB,kBAACL,EAAA,EAAD,CAAMb,MAAI,EAACmB,GAAI,OAI3B,kBAACN,EAAA,EAAD,CAAMb,MAAI,GACN,kBAACY,EAAA,EAAD,CAAWtB,UAAS,UAAK3B,EAAQhR,UAC7B,kBAACkU,EAAA,EAAD,CAAMC,WAAS,EACXC,UAAU,MACVkB,QAAQ,gBACRjB,WAAW,UAEX,kBAACC,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACjB,kBAACL,EAAA,EAAD,CAAMb,MAAI,EAACmB,GAAI,KAEjBlE,EA6BI,kBAAC4D,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,GAAID,GAAI,GACrB,kBAAC4C,EAAA,EAAD,OA7BF,kBAAC,IAAMC,SAAP,KACE,kBAACnD,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,EAAGD,GAAI,GAClB,kBAACN,EAAA,EAAD,CAAMC,WAAS,EACXC,UAAU,MACVkB,QAAQ,aACRjB,WAAW,UAEX,kBAACH,EAAA,EAAD,CAAMb,MAAI,GACN,kBAACiE,EAAA,EAAD,CAAQxD,WAAU5D,EAAkCqH,KAAK,QAAQzV,QAAQ,WAAW2R,MAAM,UAAUpE,QAAS,kBAAMiD,GAAW9L,KACzHxE,IAAKC,GAAU8R,QAAQyD,WAKxC,kBAACtD,EAAA,EAAD,CAAMb,MAAI,EAACoB,GAAI,EAAGD,GAAI,GAClB,kBAACN,EAAA,EAAD,CAAMC,WAAS,EACXC,UAAU,MACVkB,QAAQ,WACRjB,WAAW,UAEX,kBAACH,EAAA,EAAD,CAAMb,MAAI,GACN,kBAACiE,EAAA,EAAD,CAAQxD,WAAU5D,EAAkCqH,KAAK,QAAQzV,QAAQ,WAAW2R,MAAM,UAAUpE,QAlOjI,WACfwB,EAAY,CACRO,QAASA,EACTE,QAASA,EACTmG,QAAS7F,GACT6B,MAAOzB,GACPxL,SAAUA,EACVvE,SAAUA,MA4NmCD,IAAKC,GAAU8R,QAAQ2D,UAUhD,kBAACpD,EAAA,EAAD,CAAQC,KAAM,CAAC,KAAM,OACjB,kBAACL,EAAA,EAAD,CAAMb,MAAI,EAACmB,GAAI","file":"static/js/18.6ed3ad7b.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        position: \"relative\",\r\n        flexGrow: 1\r\n    },\r\n    stickyTop: {\r\n        position: \"sticky\",\r\n        top: 0,\r\n        zIndex: 10000\r\n    },\r\n    paper: {\r\n        position: \"relative\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            marginLeft: \"15%\",\r\n            marginRight: \"15%\"\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: \"25%\",\r\n            marginRight: \"25%\"\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: \"35%\",\r\n            marginRight: \"35%\"\r\n        }\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n        flex: 1\r\n    },\r\n    MuiRteRead: {\r\n        backgroundColor: theme.palette.text.main,\r\n        padding: 10\r\n    },\r\n    skeletonCard: {\r\n        minHeight: 150,\r\n        borderRadius: 8\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(1),\r\n        height: theme.spacing(1),\r\n    },\r\n    largeAvatar: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n    filterFab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1),\r\n        right: theme.spacing(1)\r\n    },\r\n    addPostFab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(10),\r\n        right: theme.spacing(1)\r\n    },\r\n    flexSpaceBetween: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    margin1: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    margin2: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    padding1: {\r\n        padding: theme.spacing(1)\r\n    },\r\n    padding2: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    verticalCenter: {\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n    },\r\n    fullWidth: {\r\n        width: \"100%\"\r\n    }\r\n}));","import {\r\n    setOpenSnackbar,\r\n    setUserPending, setUserData, resetUserData,\r\n    setTechnicsPending, setTechnicsData, setTechnicsError,\r\n    setTagsPending, setTagsData, setTagsError,\r\n    setUserPostsPending, setUserPostsData, setUserPostsError,\r\n    setAddPostPending, setAddPostData, setAddPostError,\r\n    setUpdatePostPending, setUpdatePostData, setUpdatePostError,\r\n    setDeletePostPending, setDeletePostData, setDeletePostError,\r\n    setPostCommentsPending, setPostCommentsData, setPostCommentsError,\r\n    setAddPostCommentsPending, setAddPostCommentsData, setAddPostCommentsError,\r\n    setUpdatePostCommentsPending, setUpdatePostCommentsData, setUpdatePostCommentsError,\r\n    setSearchIconPending, setSearchIconData, setSearchIconError,\r\n    setAddLocationPending, setAddLocationData, setAddLocationError\r\n} from \"../actions/actions\";\r\nimport { setToken } from \"../functions/auth\";\r\nimport history from \"../history\";\r\nimport historyPath from \"../historyPath\";\r\nimport dict from \"../dictionary\";\r\n\r\nconst path = \"http://192.168.1.32:8080\";\r\n\r\nexport const userSignIn = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUserPending());\r\n        return fetch(path + \"/api/auth/signin\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                const decode = setToken(result.token);\r\n                dispatch(setUserData(decode));\r\n                dispatch(setOpenSnackbar({ variant: \"success\", message: dict[data.language].texts.Wellcome }));\r\n                history.push(historyPath.MainPage);\r\n            })\r\n            .catch(error => {\r\n                dispatch(resetUserData());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const userSignUp = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUserPending());\r\n        return fetch(path + \"/api/auth/signup\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                const decode = setToken(result.token);\r\n                dispatch(setUserData(decode));\r\n                dispatch(setOpenSnackbar({ variant: \"success\", message: dict[data.language].texts.Wellcome }));\r\n                history.push(historyPath.MainPage);\r\n            })\r\n            .catch(error => {\r\n                dispatch(resetUserData());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchTechnics = () => {\r\n    return dispatch => {\r\n        dispatch(setTechnicsPending());\r\n        return fetch(path + \"/api/technic/published\", {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setTechnicsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setTechnicsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: err.error }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchTags = () => {\r\n    return dispatch => {\r\n        dispatch(setTagsPending());\r\n        return fetch(path + \"/api/tag\", {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setTagsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setTagsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: err.error }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUpdateTechnics = (data) => {\r\n    return dispatch => {\r\n        dispatch(setTechnicsPending());\r\n        return fetch(`${path}/api/technic/${data.id}`, {\r\n            method: \"PUT\",\r\n            headers: ({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data.data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setOpenSnackbar({ variant: \"success\", message: result.result }));\r\n                dispatch(fetchTechnics());\r\n                history.push({\r\n                    pathname: historyPath.ReadTechnic,\r\n                    defaultData: {\r\n                        id: data.id\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch(setTechnicsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUserPosts = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUserPostsPending());\r\n        return fetch(`${path}/api/post/user/${data.create_user}`, {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setUserPostsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setUserPostsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchAddPost = (data) => {\r\n    return dispatch => {\r\n        dispatch(setAddPostPending());\r\n        return fetch(`${path}/api/post`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setAddPostData(result));\r\n                history.push(historyPath.Dreams);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAddPostError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUpdatePost = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUpdatePostPending());\r\n        return fetch(`${path}/api/post/${data.id}`, {\r\n            method: \"PUT\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setUpdatePostData(result));\r\n                dispatch(fetchUserPosts({ language: data.language, create_user: data.create_user }));\r\n                history.push({\r\n                    pathname: historyPath.ReadDream,\r\n                    defaultData: {\r\n                        id: data.id\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch(setUpdatePostError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchDeletePost = (data) => {\r\n    return dispatch => {\r\n        dispatch(setDeletePostPending());\r\n        return fetch(`${path}/api/post/${data.id}`, {\r\n            method: \"DELETE\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setDeletePostData(result));\r\n                dispatch(fetchUserPosts({ language: data.language, create_user: data.create_user }));\r\n                history.push(historyPath.Dreams);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setDeletePostError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchPostComments = (data) => {\r\n    return dispatch => {\r\n        dispatch(setPostCommentsPending());\r\n        return fetch(`${path}/api/comment/${data.post_id}`, {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setPostCommentsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setPostCommentsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchAddPostComment = (data) => {\r\n    return dispatch => {\r\n        dispatch(setAddPostCommentsPending());\r\n        return fetch(`${path}/api/comment`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setAddPostCommentsData(result));\r\n                dispatch(fetchPostComments({ language: data.language, post_id: data.post_id }));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAddPostCommentsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUpdatePostComment = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUpdatePostCommentsPending());\r\n        return fetch(`${path}/api/comment/${data.id}`, {\r\n            method: \"PUT\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setUpdatePostCommentsData(result));\r\n                dispatch(fetchPostComments({ language: data.language, post_id: data.post_id }));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setUpdatePostCommentsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchSearchIcon = (data) => {\r\n    return dispatch => {\r\n        dispatch(setSearchIconPending());\r\n        return fetch(`${path}/geticons`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                if (result.length > 0) dispatch(setSearchIconData(result));\r\n                else {\r\n                    dispatch(setOpenSnackbar({ variant: \"info\", message: dict[data.language].texts[`FindIcon${Math.floor(Math.random() * 5)}`] }));\r\n                    dispatch(fetchSearchIcon(data));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(setSearchIconError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchAddLocation = (data) => {\r\n    return dispatch => {\r\n        dispatch(setAddLocationPending());\r\n        return fetch(`${path}/api/tag`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setAddLocationData(result));\r\n                history.push(data.backPath);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAddLocationError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}","import { emphasize, withStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nexport default withStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            maxWidth: 150\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            maxWidth: \"100%\"\r\n        },\r\n        userSelect: \"none\",\r\n        height: theme.spacing(3),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        \"&:hover, &:focus\": {\r\n            backgroundColor: theme.palette.grey[500]\r\n        },\r\n        \"&:active\": {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[500], 0.12)\r\n        }\r\n    }\r\n}))(Chip);","import tinycolor from 'tinycolor2' // TODO: Make this smaller?\r\n\r\nexport function produceRgbShades(r, g, b, amount) {\r\n    let shades = []\r\n\r\n    const hsl = tinycolor(`rgb(${r}, ${g}, ${b})`).toHsl()\r\n\r\n    for (let i = 9; i > 1; i -= 8 / amount) { // Decrements from 9 - 1; i being what luminosity (hsl.l) is multiplied by.\r\n        hsl.l = 0.1 * i\r\n        shades.push(tinycolor(hsl).toRgb())\r\n    }\r\n\r\n    return shades\r\n}\r\n\r\nexport function colourToRgbObj(colour) { // TODO: Note which colours tinycolor() can take; i.e. hex / rgb strings, objects, etc.\r\n    return tinycolor(colour).toRgb()\r\n}\r\n\r\nexport function calculateBounds(min, max) { // i.e. min & max pixels away from the center of the canvas.\r\n    return {\r\n        inside: (cursorPosFromCenter) => { // our relative mouse-position is passed through here to check.\r\n            return cursorPosFromCenter >= min && cursorPosFromCenter <= max\r\n        }\r\n    }\r\n}\r\n\r\nexport function convertObjToString(obj) {\r\n    return tinycolor(obj).toRgbString()\r\n}\r\n\r\n// Method is helpful for generating a radius representative of the stroke + taking into account lineWidth.\r\nexport function getEffectiveRadius(trueRadius, lineWidth) {\r\n    return trueRadius - lineWidth / 2\r\n}\r\n","export default [\r\n    '#00C3A9',\r\n    '#00B720',\r\n    '#008813',\r\n    '#000000',\r\n    '#FFFFFF',\r\n    '#F8E300',\r\n    '#FF6400',\r\n    '#E20000',\r\n    '#AC000D',\r\n    '#9E005F',\r\n    '#6D0E82',\r\n    '#3B3887',\r\n    '#175FDA',\r\n    '#0091E2',\r\n    '#00BCED',\r\n    '#14E4C5'\r\n]\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { colourToRgbObj, getEffectiveRadius, calculateBounds, produceRgbShades } from './utils.js';\r\nimport hexStrings from './hexStrings.js';\r\n\r\nconst fullCircle = 2 * Math.PI;\r\nconst quarterCircle = fullCircle / 4;\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length === 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    var c;\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n        c = hex.substring(1).split('');\r\n        if (c.length === 3) {\r\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n        }\r\n        c = '0x' + c.join('');\r\n        return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',1)';\r\n    }\r\n    throw new Error('Bad Hex');\r\n}\r\n\r\nclass ColourWheel extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            rgb: null,\r\n            innerWheelOpen: false,\r\n            centerCircleOpen: false\r\n        }\r\n\r\n        // Initialised just before the DOM has loaded; after constructor().\r\n        this.outerWheelBounds = null\r\n        this.innerWheelBounds = null\r\n        this.centerCircleBounds = null\r\n\r\n        this.outerWheelRadius = null\r\n        this.innerWheelRadius = null\r\n        this.centerCircleRadius = null\r\n        this.firstSpacerRadius = null\r\n        this.secondSpacerRadius = null\r\n\r\n        // Initialised once the DOM has loaded.\r\n        this.canvasEl = null\r\n        this.ctx = null\r\n\r\n        // Bindings:\r\n        this.onCanvasHover = this.onCanvasHover.bind(this)\r\n        this.onCanvasClick = this.onCanvasClick.bind(this)\r\n    }\r\n\r\n    // MARK - Common:\r\n    getRelativeMousePos(clientX, clientY) {\r\n        const { radius } = this.props\r\n\r\n        const canvasPos = this.canvasEl.getBoundingClientRect()\r\n        const h = radius * 2\r\n        const w = radius * 2\r\n\r\n        // evtPos relative to our canvas.\r\n        const onCanvas = {\r\n            x: clientX - canvasPos.left,\r\n            y: clientY - canvasPos.top\r\n        }\r\n\r\n        // e is our mouse-position relative to the center of the canvasEl; using pythag\r\n        const fromCenter = Math.sqrt((onCanvas.x - (w / 2)) * (onCanvas.x - (w / 2)) + (onCanvas.y - (h / 2)) * (onCanvas.y - (h / 2)))\r\n\r\n        // This returns an object in which we have both mouse-pos relative to the canvas, as well as the true-middle.\r\n        return {\r\n            fromCenter,\r\n            onCanvas\r\n        }\r\n    }\r\n\r\n    initCanvas() {\r\n        const { radius } = this.props\r\n\r\n        const width = radius * 2\r\n        const height = radius * 2\r\n\r\n        this.ctx.clearRect(0, 0, width, height)\r\n\r\n        this.drawOuterWheel()\r\n        this.drawSpacers()\r\n    }\r\n\r\n    // MARK - Life-cycle methods:\r\n    componentWillMount() {\r\n        const { radius, lineWidth, padding } = this.props\r\n\r\n        // Setting effective radii:\r\n        this.outerWheelRadius = radius\r\n        this.innerWheelRadius = this.outerWheelRadius - lineWidth - padding\r\n        this.centerCircleRadius = this.innerWheelRadius - lineWidth - padding\r\n        this.firstSpacerRadius = this.outerWheelRadius - lineWidth // NOTE: effectiveRadius will take into account padding as lineWidth.\r\n        this.secondSpacerRadius = this.innerWheelRadius - lineWidth\r\n\r\n        // Defining our bounds-objects, exposes a .inside(e) -> boolean method:\r\n        this.outerWheelBounds = calculateBounds(radius - lineWidth, radius)\r\n        this.innerWheelBounds = calculateBounds(this.innerWheelRadius - lineWidth, this.innerWheelRadius)\r\n        this.centerCircleBounds = calculateBounds(0, this.centerCircleRadius)\r\n        this.firstSpacerBounds = calculateBounds(this.firstSpacerRadius - padding, this.firstSpacerRadius)\r\n        this.secondSpacerBounds = calculateBounds(this.secondSpacerRadius - padding, this.secondSpacerRadius)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Giving this context to our parent component.\r\n        this.props.onRef(this)\r\n\r\n        // Initialising our canvas & context objs.\r\n        this.canvasEl = document.getElementById('colour-picker')\r\n        this.ctx = this.canvasEl.getContext('2d')\r\n\r\n        if (this.props.preset) {\r\n            const rgb = colourToRgbObj(this.props.presetColour)\r\n            this.setState({ rgb }, () => {\r\n                this.drawOuterWheel()\r\n                this.drawInnerWheel()\r\n                this.drawCenterCircle()\r\n                this.drawSpacers()\r\n            })\r\n        } else {\r\n            this.drawOuterWheel()\r\n            this.drawSpacers()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    // MARK - mouse-events:\r\n    onCanvasHover({ clientX, clientY }) {\r\n        const evt = this.getRelativeMousePos(clientX, clientY)\r\n\r\n        // Cases for mouse-location:\r\n        if (this.outerWheelBounds.inside(evt.fromCenter)) {\r\n            this.canvasEl.style.cursor = 'crosshair'\r\n        }\r\n        else if (this.innerWheelBounds.inside(evt.fromCenter) && this.state.innerWheelOpen) {\r\n            this.canvasEl.style.cursor = 'crosshair'\r\n        }\r\n        else if (this.centerCircleBounds.inside(evt.fromCenter) && this.state.centerCircleOpen) { // TODO: Have it clear on click?\r\n            this.canvasEl.style.cursor = 'pointer'\r\n        }\r\n        else {\r\n            this.canvasEl.style.cursor = 'auto'\r\n        }\r\n    }\r\n\r\n    onCanvasClick({ clientX, clientY }) {\r\n        const evt = this.getRelativeMousePos(clientX, clientY)\r\n\r\n        // Cases for click-events:\r\n        if (this.outerWheelBounds.inside(evt.fromCenter)) {\r\n            this.outerWheelClicked(evt.onCanvas)\r\n        }\r\n        else if (this.innerWheelBounds.inside(evt.fromCenter)) {\r\n            this.innerWheelClicked(evt.onCanvas)\r\n        }\r\n        else if (this.centerCircleBounds.inside(evt.fromCenter)) {\r\n            this.onCenterCircleClick();\r\n        }\r\n    }\r\n\r\n    // MARK - Clicks & action methods:\r\n    outerWheelClicked(evtPos) {\r\n        // returns an rgba array of the pixel-clicked.\r\n        const rgbaArr = this.ctx.getImageData(evtPos.x, evtPos.y, 1, 1).data\r\n        const [r, g, b] = rgbaArr\r\n\r\n        const rgb = { r, g, b }\r\n\r\n        this.setState({\r\n            rgb,\r\n            innerWheelOpen: true,\r\n            centerCircleOpen: true\r\n        }, () => {\r\n            this.drawInnerWheel()\r\n            this.drawCenterCircle()\r\n        })\r\n    }\r\n\r\n    innerWheelClicked(evtPos) {\r\n        const rgbaArr = this.ctx.getImageData(evtPos.x, evtPos.y, 1, 1).data\r\n        const [r, g, b] = rgbaArr\r\n\r\n        const rgb = { r, g, b }\r\n\r\n        this.setState({ rgb, centerCircleOpen: true }, () => { this.drawCenterCircle() })\r\n    }\r\n\r\n    onCenterCircleClick() {\r\n        const { rgb } = this.state;\r\n        this.props.onCenterCircleClick(\"#\" + componentToHex(rgb.r) + componentToHex(rgb.g) + componentToHex(rgb.b));\r\n    }\r\n\r\n    setPresetColour(hex) {\r\n        const rgb = colourToRgbObj(hexToRgb(hex));\r\n        this.setState({ rgb }, () => {\r\n            this.drawOuterWheel()\r\n            this.drawInnerWheel()\r\n            this.drawCenterCircle()\r\n            this.drawSpacers()\r\n        })\r\n    }\r\n\r\n    clear(callback = false) {\r\n        this.setState({\r\n            rgb: null,\r\n            innerWheelOpen: false,\r\n            centerCircleOpen: false\r\n        }, () => {\r\n            // Reset state & re-draw.\r\n            this.initCanvas()\r\n            if (callback) callback()\r\n        })\r\n    }\r\n\r\n    // MARK - Drawing:\r\n    drawOuterWheel() {\r\n        // TODO: Draw outline; separate method.\r\n        const { radius, colours, lineWidth } = this.props\r\n        const height = radius * 2\r\n        const width = radius * 2\r\n\r\n        // This value ensures that the stroke accounts for the lineWidth provided to produce an accurately represented radius.\r\n        const effectiveRadius = getEffectiveRadius(radius, lineWidth)\r\n\r\n        // Converting each colour into a relative rgb-object we can iterate through.\r\n        const rgbArr = colours.map(colour => colourToRgbObj(colour))\r\n\r\n        rgbArr.forEach((rgb, i) => {\r\n            this.ctx.beginPath()\r\n\r\n            // Creates strokes 1 / rgbArr.length of the circle circumference.\r\n            const startAngle = (fullCircle / rgbArr.length) * i\r\n            const endAngle = (fullCircle / rgbArr.length) * (i + 1)\r\n\r\n            this.ctx.arc(width / 2, height / 2, effectiveRadius, startAngle, endAngle)\r\n            this.ctx.lineWidth = lineWidth // This is the width of the innerWheel.\r\n\r\n            // Stroke-style changes based on the shade:\r\n            this.ctx.strokeStyle = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\r\n            this.ctx.stroke()\r\n            this.ctx.closePath()\r\n        })\r\n    }\r\n\r\n    drawSpacers() {\r\n        if (this.props.spacers) {\r\n            this.drawSpacer(this.firstSpacerRadius)\r\n            this.drawSpacer(this.secondSpacerRadius)\r\n        }\r\n    }\r\n\r\n    drawSpacer(spacerRadius) {\r\n        const { radius, padding, spacers: { colour, shadowColour, shadowBlur } } = this.props\r\n\r\n        const height = radius * 2\r\n        const width = radius * 2\r\n\r\n        const effectiveRadius = getEffectiveRadius(spacerRadius, padding)\r\n\r\n        this.ctx.beginPath()\r\n\r\n        this.ctx.arc(width / 2, height / 2, effectiveRadius, 0, fullCircle)\r\n        this.ctx.lineWidth = padding\r\n\r\n        this.ctx.shadowColor = shadowColour\r\n        this.ctx.shadowBlur = shadowBlur\r\n        this.ctx.strokeStyle = colour\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n\r\n        // To reset our shadowColor for other strokes.\r\n        this.ctx.shadowColor = 'transparent'\r\n    }\r\n\r\n    drawInnerWheel(animationPercentage = 0) {\r\n        // raf setup.\r\n        let requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame\r\n        window.requestAnimationFrame = requestAnimationFrame;\r\n\r\n        const { rgb: { r, g, b } } = this.state;\r\n        const { radius, lineWidth, shades, animated } = this.props;\r\n\r\n        const height = radius * 2;\r\n        const width = radius * 2;\r\n\r\n        const effectiveRadius = getEffectiveRadius(this.innerWheelRadius, lineWidth);\r\n\r\n        // Re-initialising canvas.\r\n        this.ctx.clearRect(0, 0, width, height);\r\n\r\n        this.drawOuterWheel();\r\n        this.drawSpacers();\r\n\r\n        const rgbShades = produceRgbShades(r, g, b, shades)\r\n\r\n        // Different functions for drawing our inner-wheel of shades.\r\n        function drawShadesFunc() {\r\n            rgbShades.forEach((rgb, i) => {\r\n                this.ctx.beginPath()\r\n\r\n                const startAngle = ((fullCircle / rgbShades.length) * i) + quarterCircle\r\n                const endAngle = ((fullCircle / rgbShades.length) * (i + 1)) + (1 / 2) * Math.PI\r\n\r\n                this.ctx.arc(width / 2, height / 2, effectiveRadius, startAngle, endAngle)\r\n                this.ctx.lineWidth = lineWidth // This is the width of the innerWheel.\r\n\r\n                // Stroke style changes based on the shade:\r\n                this.ctx.strokeStyle = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\r\n                this.ctx.stroke()\r\n                this.ctx.closePath()\r\n            })\r\n        }\r\n\r\n        function animateShadesFunc() {\r\n            rgbShades.forEach((rgb, i) => {\r\n                this.ctx.beginPath()\r\n\r\n                const startAngle = ((fullCircle / rgbShades.length) * i) + quarterCircle\r\n                const endAngle = ((fullCircle / rgbShades.length) * (i + 1)) + (1 / 2) * Math.PI\r\n\r\n                this.ctx.arc(width / 2, height / 2, effectiveRadius, startAngle, endAngle)\r\n                this.ctx.lineWidth = lineWidth * animationPercentage // This is the width of the innerWheel.\r\n\r\n                // Stroke style changes based on the shade:\r\n                this.ctx.strokeStyle = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\r\n                this.ctx.stroke()\r\n                this.ctx.closePath()\r\n            })\r\n\r\n            // TODO: Make this animation speed dynamic.\r\n            animationPercentage += (1 / 10) // i.e. 1 / x frames\r\n\r\n            // Essentially re-draws rgbShades.forEach until the animationPercentage reaches 1, i.e. 100%\r\n            if (animationPercentage < 1) requestAnimationFrame(animateShades)\r\n        }\r\n\r\n        let animateShades = animateShadesFunc.bind(this);\r\n        let drawShades = drawShadesFunc.bind(this);\r\n\r\n        if (animated) {\r\n            animateShades();\r\n        }\r\n        else { // TODO: Refactor into its own func.\r\n            drawShades();\r\n        }\r\n    }\r\n\r\n    drawCenterCircle() {\r\n        const { rgb } = this.state\r\n        const { radius } = this.props\r\n\r\n        const height = radius * 2\r\n        const width = radius * 2\r\n        this.ctx.lineWidth = 0\r\n\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(width / 2, height / 2, this.centerCircleRadius, 0, 2 * Math.PI)\r\n        this.ctx.fillStyle = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\r\n        this.ctx.fill()\r\n        this.ctx.lineWidth = 0.1\r\n        this.ctx.strokeStyle = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\r\n        this.ctx.stroke()\r\n        this.ctx.closePath()\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(radius - radius / 10, radius);\r\n        this.ctx.lineTo(radius - radius / 10, radius);\r\n        this.ctx.lineTo(radius, radius + radius / 12);\r\n        this.ctx.lineTo(radius + radius / 10, radius - radius / 12);\r\n        this.ctx.strokeStyle = \"black\";\r\n        this.ctx.lineWidth = 5;\r\n        this.ctx.stroke();\r\n    }\r\n\r\n    render() {\r\n        const { radius, dynamicCursor } = this.props\r\n\r\n        return (\r\n            dynamicCursor ? (\r\n                <canvas\r\n                    id='colour-picker'\r\n                    onClick={this.onCanvasClick}\r\n                    onMouseMove={this.onCanvasHover}\r\n                    width={`${radius * 2}px`}\r\n                    height={`${radius * 2}px`}\r\n                />\r\n            ) : (\r\n                    <canvas\r\n                        id='colour-picker'\r\n                        onClick={this.onCanvasClick}\r\n                        width={`${radius * 2}px`}\r\n                        height={`${radius * 2}px`}\r\n                    />\r\n                )\r\n        )\r\n    }\r\n}\r\n\r\nColourWheel.propTypes = {\r\n    radius: PropTypes.number.isRequired,\r\n    lineWidth: PropTypes.number.isRequired,\r\n    colours: PropTypes.array,\r\n    shades: PropTypes.number,\r\n    padding: PropTypes.number,\r\n    dynamicCursor: PropTypes.bool,\r\n    spacers: PropTypes.object,\r\n    preset: PropTypes.bool,\r\n    componentToHex: PropTypes.func,\r\n    setPresetColour: PropTypes.func,\r\n    onCenterCircleClick: PropTypes.func\r\n}\r\n\r\nColourWheel.defaultProps = {\r\n    colours: hexStrings,\r\n    shades: 16,\r\n    padding: 0,\r\n    dynamicCursor: true,\r\n    preset: false,\r\n    animate: false\r\n}\r\n\r\nexport default ColourWheel;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport StyledBreadcrumb from \"../StyledBreadcrumb\";\r\nimport ColourWheel from \"../colourWheel/index\"\r\n\r\nimport history from \"../../history\";\r\nimport Styles from \"../../styles\";\r\nimport dict from \"../../dictionary\";\r\n\r\nimport { fetchSearchIcon, fetchAddLocation } from \"../../functions/fetch\";\r\nimport { setOpenDialogConfirm, setResetDialogConfirm } from \"../../actions/actions\";\r\nimport { getLanguage } from \"../../reducers/languageReducer\";\r\nimport { getDialogConfirmData, getDialogConfirmAction } from \"../../reducers/dialogConfirmReducer\";\r\nimport { getSearchIconPending, getSearchIconData } from \"../../reducers/searchIconReducer\";\r\nimport { getAddLocationPending } from \"../../reducers/addLocationReducer\";\r\n\r\nconst radius = (window.innerWidth - 100) / 2 > 200 ? 200 : ((window.innerWidth - 100) / 2);\r\n\r\nfunction AddLocation(props) {\r\n    const { language,\r\n        openDialogConfirm, resetDialogConfirm, dialogConfirmData, dialogConfirmAction,\r\n        searchIconPending, searchIconData, fetchSearchIcon,\r\n        addLocation, addLocationPending } = props;\r\n    const { breadcrumbs, backPath } = props.location.defaultData;\r\n    const classes = Styles();\r\n\r\n    const [name_ru, setTitleRu] = React.useState(\"\");\r\n    const [name_en, setTitleEn] = React.useState(\"\");\r\n    const [searchName, setSearchName] = React.useState(\"\");\r\n    const [anchorElPopover, setAnchorElPopover] = React.useState(null);\r\n    const [selectedIcon, setSelectedIcon] = React.useState(\"\");\r\n    const [openColorDialog, setOpenColorDialog] = React.useState(false);\r\n    const [iconColor, setIconColor] = React.useState('#ffffff');\r\n\r\n    const handleSetSearchName = (e) => {\r\n        if (e.target.value.search(/[а-яА-ЯёЁ]/g) !== -1) {\r\n            setAnchorElPopover(e.currentTarget);\r\n            setSearchName(e.target.value.replace(/[а-яА-ЯёЁ]/g, \"\"));\r\n        }\r\n        else {\r\n            handleClosePopover();\r\n            setSearchName(e.target.value);\r\n        }\r\n    };\r\n\r\n    const openPopover = Boolean(anchorElPopover);\r\n    const idPopover = Boolean(anchorElPopover) ? \"simple-popover\" : undefined;\r\n\r\n    const handleClosePopover = () => {\r\n        setAnchorElPopover(null);\r\n    };\r\n\r\n    const searchIcon = () => {\r\n        fetchSearchIcon({\r\n            name: searchName.replace(/ /g, \"%20\"),\r\n            language: language\r\n        });\r\n    };\r\n\r\n    const handleSetSelectedIcon = (event) => {\r\n        setSelectedIcon(event.target.value);\r\n    }\r\n\r\n    const hadnleOpenColorDialog = () => {\r\n        setOpenColorDialog(true);\r\n    };\r\n\r\n    const handleCloseColorDialog = () => {\r\n        setOpenColorDialog(false);\r\n    };\r\n\r\n    const setColor = (color) => {\r\n        setIconColor(color);\r\n        setOpenColorDialog(false);\r\n    };\r\n\r\n    const handleBack = (path) => {\r\n        openDialogConfirm({\r\n            title: dict[language].texts.CancelCreating,\r\n            message: dict[language].texts.DataWillLost,\r\n            path: path\r\n        });\r\n    };\r\n\r\n    const handleSave = () => {\r\n        addLocation({\r\n            name_ru: name_ru,\r\n            name_en: name_en,\r\n            img_url: selectedIcon,\r\n            color: iconColor,\r\n            backPath: backPath,\r\n            language: language\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (typeof dialogConfirmAction === \"boolean\") {\r\n            resetDialogConfirm();\r\n            if (dialogConfirmAction) {\r\n                history.push(dialogConfirmData.path);\r\n            }\r\n        }\r\n    }, [dialogConfirmAction, resetDialogConfirm, dialogConfirmData]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog onClose={handleCloseColorDialog} open={openColorDialog} >\r\n                <DialogContent className={classes.padding1}>\r\n                    <ColourWheel\r\n                        radius={radius}\r\n                        padding={10}\r\n                        lineWidth={30}\r\n                        onCenterCircleClick={(hex) => setColor(hex)}\r\n                        onRef={ref => (ColourWheel.ColourWheel = ref)}\r\n                        spacers={{\r\n                            colour: '#00000000',\r\n                            shadowColour: 'grey',\r\n                            shadowBlur: 5\r\n                        }}\r\n                        preset\r\n                        presetColour={iconColor}\r\n                        animated\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Paper className={`${classes.padding1} ${classes.stickyTop}`} >\r\n                <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n                    {breadcrumbs.map((item, key) =>\r\n                        <StyledBreadcrumb key={key} component=\"a\" color=\"primary\" label={item.backName} icon={item.icon} onClick={() => handleBack(item.urlBack)} />\r\n                    )}\r\n                    <StyledBreadcrumb component=\"a\" color=\"primary\" disabled={true} label={dict[language].buttons.AddLocation} />\r\n                </Breadcrumbs>\r\n            </Paper>\r\n            <Container className={`${classes.margin2}`}>\r\n                <Grid container\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                >\r\n                    <Grid item >\r\n                        <Grid container spacing={1}>\r\n                            <Hidden only={[\"xs\", \"sm\"]}>\r\n                                <Grid item md={2} />\r\n                            </Hidden>\r\n                            <Grid item xs={12} sm={6} md={4}>\r\n                                <Paper className={`${classes.margin1} ${classes.padding1}`} >\r\n                                    <InputBase fullWidth\r\n                                        spellCheck={true}\r\n                                        placeholder={dict[language].texts.Title + \" (\" + dict[language].texts.Ru + \")\"}\r\n                                        value={name_ru}\r\n                                        inputProps={{ \"aria-label\": \"location-title-ru\" }}\r\n                                        onChange={e => setTitleRu(e.target.value)}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4}>\r\n                                <Paper className={`${classes.margin1} ${classes.padding1}`} >\r\n                                    <InputBase fullWidth\r\n                                        spellCheck={true}\r\n                                        placeholder={dict[language].texts.Title + \" (\" + dict[language].texts.En + \")\"}\r\n                                        value={name_en}\r\n                                        inputProps={{ \"aria-label\": \"location-title-en\" }}\r\n                                        onChange={e => setTitleEn(e.target.value)}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Hidden only={[\"xs\", \"sm\"]}>\r\n                                <Grid item md={2} />\r\n                            </Hidden>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container spacing={1}>\r\n                            <Hidden only={[\"xs\", \"sm\"]}>\r\n                                <Grid item md={2} />\r\n                            </Hidden>\r\n                            <Grid item xs={12} sm={6} md={4} >\r\n                                <Paper className={`${classes.margin1} ${classes.padding1}`} >\r\n                                    <Grid container\r\n                                        direction=\"row\"\r\n                                        justify=\"space-between\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <Grid item xs={10}>\r\n                                            <InputBase fullWidth\r\n                                                spellCheck={true}\r\n                                                disabled={searchIconPending}\r\n                                                placeholder={dict[language].texts.FindIcon + \" (\" + dict[language].texts.En + \")\"}\r\n                                                value={searchName}\r\n                                                inputProps={{ \"aria-label\": \"icon-name\" }}\r\n                                                onChange={handleSetSearchName}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                            <IconButton className={classes.padding1}\r\n                                                aria-label=\"search\"\r\n                                                spellCheck={true}\r\n                                                disabled={searchName.length > 0 && !searchIconPending ? false : true}\r\n                                                onClick={searchIcon}\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Popover\r\n                                        id={idPopover}\r\n                                        open={openPopover}\r\n                                        anchorEl={anchorElPopover}\r\n                                        onClose={handleClosePopover}\r\n                                        anchorOrigin={{\r\n                                            vertical: \"bottom\",\r\n                                            horizontal: \"center\",\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: \"top\",\r\n                                            horizontal: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <Typography className={classes.padding1}>\r\n                                            {dict[language].errors.ENGLISH_WORDS_ONLY}\r\n                                        </Typography>\r\n                                    </Popover>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4}>\r\n                                <Paper className={`${classes.margin1} ${classes.padding1}`} >\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"space-around\"\r\n                                        alignItems=\"center\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        <Grid item>\r\n                                            {!searchIconPending\r\n                                                ? <FormControl\r\n                                                    variant=\"outlined\"\r\n                                                    disabled={Object.keys(searchIconData).length !== 0 ? false : true}\r\n                                                >\r\n                                                    <InputLabel id=\"select-icon\">\r\n                                                        {dict[language].texts.Icon}\r\n                                                    </InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"select-icon\"\r\n                                                        style={{\r\n                                                            minWidth: 100\r\n                                                        }}\r\n                                                        value={selectedIcon}\r\n                                                        onChange={handleSetSelectedIcon}\r\n                                                    >\r\n                                                        {Object.keys(searchIconData).length > 0\r\n                                                            ? searchIconData.map((item, key) => (\r\n                                                                <MenuItem key={key} value={item} >\r\n                                                                    <Avatar variant=\"rounded\" style={{ backgroundColor: iconColor }} src={item} />\r\n                                                                </MenuItem>\r\n                                                            ))\r\n                                                            : <MenuItem value={\"\"} />\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                : <CircularProgress />\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid item style={{ borderRadius: 4, backgroundColor: iconColor }}>\r\n                                            <ButtonBase onClick={hadnleOpenColorDialog}>\r\n                                                <Typography style={{ color: \"black\" }}>\r\n                                                    {dict[language].texts.IconColor}\r\n                                                </Typography>\r\n                                            </ButtonBase>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Hidden only={[\"xs\", \"sm\"]}>\r\n                                <Grid item md={2} />\r\n                            </Hidden>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Container className={`${classes.margin2}`}>\r\n                            <Grid container\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Hidden only={[\"xs\", \"sm\"]}>\r\n                                    <Grid item md={3} />\r\n                                </Hidden>\r\n                                {!addLocationPending\r\n                                    ? <React.Fragment>\r\n                                        <Grid item xs={6} md={3}>\r\n                                            <Grid container\r\n                                                direction=\"row\"\r\n                                                justify=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >\r\n                                                <Grid item>\r\n                                                    <Button disabled={searchIconPending ? true : false} size=\"small\" variant=\"outlined\" color=\"primary\" onClick={() => handleBack(backPath)}>\r\n                                                        {dict[language].buttons.Cancel}\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} md={3}>\r\n                                            <Grid container\r\n                                                direction=\"row\"\r\n                                                justify=\"flex-end\"\r\n                                                alignItems=\"center\"\r\n                                            >\r\n                                                <Grid item>\r\n                                                    <Button disabled={searchIconPending ? true : false} size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleSave}>\r\n                                                        {dict[language].buttons.Save}\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </React.Fragment>\r\n                                    : <Grid item xs={12} md={6}>\r\n                                        <LinearProgress />\r\n                                    </Grid>\r\n                                }\r\n                                <Hidden only={[\"xs\", \"sm\"]}>\r\n                                    <Grid item md={3} />\r\n                                </Hidden>\r\n                            </Grid>\r\n                        </Container>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nAddLocation.propTypes = {\r\n    language: PropTypes.string.isRequired,\r\n    searchIconPending: PropTypes.bool.isRequired,\r\n    searchIconData: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n    fetchSearchIcon: PropTypes.func.isRequired,\r\n    addLocation: PropTypes.func.isRequired,\r\n    addLocationPending: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        language: getLanguage(store),\r\n        dialogConfirmData: getDialogConfirmData(store),\r\n        dialogConfirmAction: getDialogConfirmAction(store),\r\n        searchIconPending: getSearchIconPending(store),\r\n        searchIconData: getSearchIconData(store),\r\n        addLocationPending: getAddLocationPending(store)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    openDialogConfirm: setOpenDialogConfirm,\r\n    resetDialogConfirm: setResetDialogConfirm,\r\n    fetchSearchIcon: fetchSearchIcon,\r\n    addLocation: fetchAddLocation\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddLocation);\r\n"],"sourceRoot":""}