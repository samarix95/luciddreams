{"version":3,"sources":["styles.js","functions/fetch.js","components/SignIn.js"],"names":["makeStyles","theme","BigImg","breakpoints","up","height","width","MedImg","Border3","border","borderRadius","BackgroundImg","backgroundPosition","backgroundRepeat","backgroundSize","root","position","flexGrow","stickyTop","top","zIndex","paper","marginLeft","marginRight","input","flex","MenuButtons","minWidth","MuiRteRead","backgroundColor","palette","text","main","padding","skeletonCard","minHeight","smallAvatar","spacing","largeAvatar","filterFab","bottom","right","addPostFab","flexSpaceBetween","display","flexDirection","justifyContent","margin1","margin","margin2","padding1","padding2","fullWidth","FadeIn","animation","FadeOut","InvertIn","InvertOut","opacity","filter","path","userSignIn","data","dispatch","setUserPending","fetch","method","headers","body","JSON","stringify","then","response","ok","Promise","resolve","json","reject","result","decode","setToken","token","setUserData","setOpenSnackbar","variant","message","dict","language","texts","Wellcome","history","push","historyPath","MainPage","catch","error","resetUserData","err","errors","userSignUp","fetchTechnics","setTechnicsPending","Accept","localStorage","setTechnicsData","setTechnicsError","fetchTags","setTagsPending","setTagsData","setTagsError","fetchUpdateTechnics","id","pathname","ReadTechnic","defaultData","fetchUserPosts","setUserPostsPending","create_user","setUserPostsData","setUserPostsError","fetchAddPost","setAddPostPending","setAddPostData","Dreams","setAddPostError","fetchUpdatePost","setUpdatePostPending","setUpdatePostData","redirect","ReadDream","setUpdatePostError","fetchDeletePost","setDeletePostPending","setDeletePostData","setDeletePostError","fetchPostComments","setPostCommentsPending","post_id","setPostCommentsData","setPostCommentsError","fetchAddPostComment","setAddPostCommentsPending","setAddPostCommentsData","setAddPostCommentsError","fetchUpdatePostComment","setUpdatePostCommentsPending","setUpdatePostCommentsData","setUpdatePostCommentsError","fetchSearchIcon","setSearchIconPending","length","setSearchIconData","Math","floor","random","setSearchIconError","fetchAddLocation","setAddLocationPending","setAddLocationData","backPath","setAddLocationError","connect","store","getLanguage","authPending","getAuthPending","bindActionCreators","signIn","props","classes","Styles","React","useState","login","setLogin","password","setPassword","className","container","direction","justify","alignItems","item","onBlur","e","target","value","type","label","Email","Password","Fragment","size","onClick","color","buttons","SignIn","Sign","Back"],"mappings":"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","file":"static/js/19.0da7d3ad.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n    BigImg: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            height: 130,\r\n            width: 130\r\n        },\r\n        [theme.breakpoints.up(\"390\")]: {\r\n            height: 150,\r\n            width: 150\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            height: 190,\r\n            width: 190\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            height: 230,\r\n            width: 230\r\n        }\r\n    },\r\n    MedImg: {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            height: 90,\r\n            width: 90\r\n        },\r\n        [theme.breakpoints.up(\"390\")]: {\r\n            height: 110,\r\n            width: 110\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            height: 150,\r\n            width: 150\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            height: 190,\r\n            width: 190\r\n        }\r\n    },\r\n    Border3: {\r\n        border: \"3px solid\",\r\n        borderRadius: \"0%\"\r\n    },\r\n    BackgroundImg: {\r\n        borderRadius: \"50%\",\r\n        backgroundPosition: \"center center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"90% 90%\"\r\n    },\r\n    root: {\r\n        position: \"relative\",\r\n        flexGrow: 1\r\n    },\r\n    stickyTop: {\r\n        position: \"sticky\",\r\n        top: 0,\r\n        zIndex: 10000\r\n    },\r\n    paper: {\r\n        position: \"relative\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            marginLeft: \"15%\",\r\n            marginRight: \"15%\"\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: \"25%\",\r\n            marginRight: \"25%\"\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: \"35%\",\r\n            marginRight: \"35%\"\r\n        }\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n        flex: 1\r\n    },\r\n    MenuButtons: {\r\n        minWidth: 300\r\n    },\r\n    MuiRteRead: {\r\n        backgroundColor: theme.palette.text.main,\r\n        padding: 10\r\n    },\r\n    skeletonCard: {\r\n        minHeight: 150,\r\n        borderRadius: 8\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(1),\r\n        height: theme.spacing(1),\r\n    },\r\n    largeAvatar: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n    filterFab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(1),\r\n        right: theme.spacing(1)\r\n    },\r\n    addPostFab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(10),\r\n        right: theme.spacing(1)\r\n    },\r\n    flexSpaceBetween: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    margin1: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    margin2: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    padding1: {\r\n        padding: theme.spacing(1)\r\n    },\r\n    padding2: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    fullWidth: {\r\n        width: \"100%\"\r\n    },\r\n    FadeIn: {\r\n        animation: `1s ease 0s normal forwards 1 $fadeIn`\r\n    },\r\n    FadeOut: {\r\n        animation: `1s ease 0s normal forwards 1 $fadeOut`\r\n    },\r\n    InvertIn: {\r\n        animation: `0.5s ease 0s normal forwards 1 $invertIn`\r\n    },\r\n    InvertOut: {\r\n        animation: `0.5s ease 0s normal forwards 1 $invertOut`\r\n    },\r\n    \"@keyframes fadeIn\": {\r\n        \"0%\": {\r\n            opacity: \"0\"\r\n        },\r\n        \"55%\": {\r\n            opacity: \"1\"\r\n        },\r\n        \"100%\": {\r\n            opacity: \"1\"\r\n        }\r\n    },\r\n    \"@keyframes fadeOut\": {\r\n        \"0%\": {\r\n            opacity: \"1\"\r\n        },\r\n        \"45%\": {\r\n            opacity: \"0\"\r\n        },\r\n        \"100%\": {\r\n            opacity: \"0\"\r\n        }\r\n    },\r\n    \"@keyframes invertIn\": {\r\n        \"0%\": {\r\n            filter: \"invert(0)\"\r\n        },\r\n        \"100%\": {\r\n            filter: \"invert(1)\"\r\n        }\r\n    },\r\n    \"@keyframes invertOut\": {\r\n        \"0%\": {\r\n            filter: \"invert(1)\"\r\n        },\r\n        \"100%\": {\r\n            filter: \"invert(0)\"\r\n        }\r\n    },\r\n}));","import {\r\n    setOpenSnackbar,\r\n    setUserPending, setUserData, resetUserData,\r\n    setTechnicsPending, setTechnicsData, setTechnicsError,\r\n    setTagsPending, setTagsData, setTagsError,\r\n    setUserPostsPending, setUserPostsData, setUserPostsError,\r\n    setAddPostPending, setAddPostData, setAddPostError,\r\n    setUpdatePostPending, setUpdatePostData, setUpdatePostError,\r\n    setDeletePostPending, setDeletePostData, setDeletePostError,\r\n    setPostCommentsPending, setPostCommentsData, setPostCommentsError,\r\n    setAddPostCommentsPending, setAddPostCommentsData, setAddPostCommentsError,\r\n    setUpdatePostCommentsPending, setUpdatePostCommentsData, setUpdatePostCommentsError,\r\n    setSearchIconPending, setSearchIconData, setSearchIconError,\r\n    setAddLocationPending, setAddLocationData, setAddLocationError\r\n} from \"../actions/actions\";\r\nimport { setToken } from \"../functions/auth\";\r\nimport history from \"../history\";\r\nimport historyPath from \"../historyPath\";\r\nimport dict from \"../dictionary\";\r\n\r\n//const path = \"http://192.168.1.32:8080\";\r\nconst path = \"https://ldserver.herokuapp.com\";\r\n\r\nexport const userSignIn = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUserPending());\r\n        return fetch(path + \"/api/auth/signin\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                const decode = setToken(result.token);\r\n                dispatch(setUserData(decode));\r\n                dispatch(setOpenSnackbar({ variant: \"success\", message: dict[data.language].texts.Wellcome }));\r\n                history.push(historyPath.MainPage);\r\n            })\r\n            .catch(error => {\r\n                dispatch(resetUserData());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const userSignUp = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUserPending());\r\n        return fetch(path + \"/api/auth/signup\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                const decode = setToken(result.token);\r\n                dispatch(setUserData(decode));\r\n                dispatch(setOpenSnackbar({ variant: \"success\", message: dict[data.language].texts.Wellcome }));\r\n                history.push(historyPath.MainPage);\r\n            })\r\n            .catch(error => {\r\n                dispatch(resetUserData());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchTechnics = () => {\r\n    return dispatch => {\r\n        dispatch(setTechnicsPending());\r\n        return fetch(path + \"/api/technic/published\", {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setTechnicsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setTechnicsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: err.error }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchTags = () => {\r\n    return dispatch => {\r\n        dispatch(setTagsPending());\r\n        return fetch(path + \"/api/tag\", {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setTagsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setTagsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: err.error }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUpdateTechnics = (data) => {\r\n    return dispatch => {\r\n        dispatch(setTechnicsPending());\r\n        return fetch(`${path}/api/technic/${data.id}`, {\r\n            method: \"PUT\",\r\n            headers: ({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data.data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setOpenSnackbar({ variant: \"success\", message: result.result }));\r\n                dispatch(fetchTechnics());\r\n                history.push({\r\n                    pathname: historyPath.ReadTechnic,\r\n                    defaultData: {\r\n                        id: data.id\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch(setTechnicsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUserPosts = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUserPostsPending());\r\n        return fetch(`${path}/api/post/user/${data.create_user}`, {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setUserPostsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setUserPostsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchAddPost = (data) => {\r\n    return dispatch => {\r\n        dispatch(setAddPostPending());\r\n        return fetch(`${path}/api/post`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setAddPostData(result));\r\n                history.push(historyPath.Dreams);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAddPostError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUpdatePost = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUpdatePostPending());\r\n        return fetch(`${path}/api/post/${data.id}`, {\r\n            method: \"PUT\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setUpdatePostData(result));\r\n                dispatch(fetchUserPosts({ language: data.language, create_user: data.create_user }));\r\n                if (data.redirect !== false)\r\n                    history.push({\r\n                        pathname: historyPath.ReadDream,\r\n                        defaultData: {\r\n                            id: data.id\r\n                        }\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                dispatch(setUpdatePostError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchDeletePost = (data) => {\r\n    return dispatch => {\r\n        dispatch(setDeletePostPending());\r\n        return fetch(`${path}/api/post/${data.id}`, {\r\n            method: \"DELETE\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setDeletePostData(result));\r\n                dispatch(fetchUserPosts({ language: data.language, create_user: data.create_user }));\r\n                history.push(historyPath.Dreams);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setDeletePostError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchPostComments = (data) => {\r\n    return dispatch => {\r\n        dispatch(setPostCommentsPending());\r\n        return fetch(`${path}/api/comment/${data.post_id}`, {\r\n            method: \"GET\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setPostCommentsData(result));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setPostCommentsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchAddPostComment = (data) => {\r\n    return dispatch => {\r\n        dispatch(setAddPostCommentsPending());\r\n        return fetch(`${path}/api/comment`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setAddPostCommentsData(result));\r\n                dispatch(fetchPostComments({ language: data.language, post_id: data.post_id }));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAddPostCommentsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUpdatePostComment = (data) => {\r\n    return dispatch => {\r\n        dispatch(setUpdatePostCommentsPending());\r\n        return fetch(`${path}/api/comment/${data.id}`, {\r\n            method: \"PUT\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setUpdatePostCommentsData(result));\r\n                dispatch(fetchPostComments({ language: data.language, post_id: data.post_id }));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setUpdatePostCommentsError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchSearchIcon = (data) => {\r\n    return dispatch => {\r\n        dispatch(setSearchIconPending());\r\n        return fetch(`${path}/geticons`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                if (result.length > 0) dispatch(setSearchIconData(result));\r\n                else {\r\n                    dispatch(setOpenSnackbar({ variant: \"info\", message: dict[data.language].texts[`FindIcon${Math.floor(Math.random() * 5)}`] }));\r\n                    dispatch(fetchSearchIcon(data));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(setSearchIconError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchAddLocation = (data) => {\r\n    return dispatch => {\r\n        dispatch(setAddLocationPending());\r\n        return fetch(`${path}/api/tag`, {\r\n            method: \"POST\",\r\n            headers: ({\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.token\r\n            }),\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) return Promise.reject(response);\r\n                else return Promise.resolve(response.json());\r\n            })\r\n            .then(result => {\r\n                dispatch(setAddLocationData(result));\r\n                history.push(data.backPath);\r\n            })\r\n            .catch(error => {\r\n                dispatch(setAddLocationError());\r\n                error.json().then(err => {\r\n                    dispatch(setOpenSnackbar({ variant: \"error\", message: dict[data.language].errors[err.error] }));\r\n                });\r\n            });\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport history from \"../history\";\r\nimport historyPath from \"../historyPath\";\r\nimport Styles from \"../styles\";\r\nimport dict from \"../dictionary\";\r\nimport { userSignIn } from \"../functions/fetch\";\r\nimport { getAuthPending } from \"../reducers/authReducer\";\r\nimport { getLanguage } from \"../reducers/languageReducer\";\r\n\r\nfunction SignIn(props) {\r\n    const { language, authPending, signIn } = props;\r\n    const classes = Styles();\r\n    const [login, setLogin] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n\r\n    const handleChangeLogin = (e) => {\r\n        setLogin(e.target.value);\r\n    };\r\n\r\n    const handleChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleSignIn = () => {\r\n        signIn({ login: login, password: password, language: language })\r\n    };\r\n\r\n    const handleBack = () => {\r\n        history.push(historyPath.Sign);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={`${classes.paper}`}>\r\n                <Grid spacing={1}\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    <Grid item className={`${classes.margin1}`}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            onBlur={handleChangeLogin}\r\n                            type=\"email\"\r\n                            id=\"input-login\"\r\n                            label={dict[language].texts.Email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={`${classes.margin1}`}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            onBlur={handleChangePassword}\r\n                            type=\"password\"\r\n                            id=\"input-password\"\r\n                            label={dict[language].texts.Password}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                    {authPending\r\n                        ? <Grid item className={`${classes.margin1}`}>\r\n                            <LinearProgress />\r\n                        </Grid>\r\n                        : <React.Fragment>\r\n                            <Grid item className={`${classes.margin1}`}>\r\n                                <Button fullWidth size=\"small\" onClick={handleSignIn} variant=\"outlined\" color=\"primary\">\r\n                                    {dict[language].buttons.SignIn}\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item className={`${classes.margin1}`}>\r\n                                <Button fullWidth size=\"small\" onClick={handleBack} variant=\"outlined\" color=\"primary\">\r\n                                    {dict[language].buttons.Back}\r\n                                </Button>\r\n                            </Grid>\r\n                        </React.Fragment>\r\n                    }\r\n                </Grid>\r\n            </Paper>\r\n        </div >\r\n    );\r\n}\r\n\r\nSignIn.propTypes = {\r\n    language: PropTypes.string.isRequired,\r\n    authPending: PropTypes.bool.isRequired,\r\n    signIn: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        language: getLanguage(store),\r\n        authPending: getAuthPending(store)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    signIn: userSignIn,\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignIn);"],"sourceRoot":""}