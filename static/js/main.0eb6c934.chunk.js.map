{"version":3,"sources":["img/map.png","img/sun.png","img/moon.png","img/astronaut.png","dictionary/ru.js","dictionary/en.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","words","buttons","dreamJoirnal","addDream","addCDream","techniques","adventures","about","useStyles","makeStyles","theme","root","flexGrow","width","height","AppDivDark","position","background","opacity","margin","zIndex","AppDivLight","transition","AppStarsDiv","overflow","AppCloudsDiv","AppStar","borderRadius","filter","animation","AppCloud","backgroundRepeat","backgroundImage","image","left","top","transform","SkyDiv","MoonSrc","backgroundSize","MoonImg","SunSrc","SunImg","AstronautButton","AstronautDiv","AstronautImg","MapButton","MapDiv","MapImg","mainGridContainer","mainGridHeadItem","maxWidth","mainGridBodyItem","menuButtonContainerItem","menuButtonContainer","menuButtonGrid","menuDivButton","padding","menuButton","minWidth","mainGridFooterItem","menuButtonContainerFooterLanguageButtons","params","amountStars","amountClouds","size","min","max","giant","duration","randomBetween","a","b","Math","random","Boolean","window","location","hostname","match","ReactDOM","render","classes","useState","EnDict","currentLanguageWords","setCurrentLanguageWords","clouds","setClouds","stars","setStars","palette","type","primary","main","secondary","setTheme","muiTheme","createMuiTheme","changeLanguage","language","RuDict","useEffect","i","round","className","key","style","boxShadow","animationDuration","scale","speed","CssBaseline","Grid","container","direction","justify","alignItems","item","xs","ButtonBase","focusRipple","onClick","alert","newPaletteType","primaryColor","secondaryColor","align","Button","variant","color","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0eb6c934.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.71ce46a8.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.4f817e2f.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.ca0fb531.png\";","module.exports = __webpack_public_path__ + \"static/media/astronaut.7219d35a.png\";","const words = {\r\n    buttons : {\r\n        dreamJoirnal: 'Дневник снов',\r\n        addDream: 'Добавить сон',\r\n        addCDream: '?Add c-dream?',\r\n        techniques: 'Техники',\r\n        adventures: '?Приключения?',\r\n        about: 'Справка',\r\n    }\r\n};\r\n\r\nexport default words;","const words = {\r\n    buttons : {\r\n        dreamJoirnal: 'Dream joirnal',\r\n        addDream: 'Add dream',\r\n        addCDream: 'Add C-dream',\r\n        techniques: 'Techniques',\r\n        adventures: 'Adventures',\r\n        about: 'About',\r\n    }\r\n};\r\n\r\nexport default words;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport MapImg from './img/map.png';\nimport SunImg from './img/sun.png';\nimport MoonImg from './img/moon.png';\nimport AstronautImg from './img/astronaut.png';\n\nimport RuDict from './dictionary/ru';\nimport EnDict from './dictionary/en';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        height: '100%',\n    },\n    AppDivDark: {\n        position: 'absolute',\n        background: 'radial-gradient(ellipse at center, rgba(8, 25, 42, 1) 20%, rgba(1, 4, 6, 1) 100%)',\n        opacity: 1,\n        margin: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -3,\n    },\n    AppDivLight: {\n        position: 'absolute',\n        background: 'radial-gradient(ellipse at center, rgba(207, 225, 237, 1) 20%, rgba(127, 170, 202, 1) 100%)',\n        transition: 'opacity 0.5s linear',\n        margin: 0,\n        opacity: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -3,\n    },\n    AppStarsDiv: {\n        transition: 'opacity 0.5s linear',\n        opacity: 0,\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        zIndex: -2,\n    },\n    AppCloudsDiv: {\n        transition: 'opacity 0.5s linear',\n        opacity: 0,\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        zIndex: -2,\n    },\n    AppStar: {\n        borderRadius: '100%',\n        position: 'absolute',\n        background: 'radial-gradient(ellipse at center, rgba(177, 198, 219, 1) 2%, rgba(5, 63, 118, 1) 100%)',\n        filter: 'blur(1px)',\n        animation: '$shine infinite alternate',\n        zIndex: -1,\n    },\n    AppCloud: {\n        position: 'absolute',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: 'url(https://www.turbotobias.dk/wp-content/uploads/2019/03/White-cloud-type3.svg)',\n        animation: '$moveclouds infinite linear',\n        zIndex: -1,\n    },\n    image: {\n        position: 'relative',\n        left: '50%',\n        top: '25%',\n        transform: 'translate(-50%, -25%)',\n        width: '35vw !important', // Overrides inline-style\n        height: '35vw',\n        borderRadius: '50%',\n    },\n    SkyDiv: {\n        position: 'absolute',\n        borderRadius: '50%',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n    },\n    MoonSrc: {\n        backgroundSize: 'cover',\n        background: 'url(' + MoonImg + ')',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        transition: 'all 0.3s linear',\n    },\n    SunSrc: {\n        backgroundSize: 'cover',\n        background: 'url(' + SunImg + ')',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        transition: 'all 0.3s linear',\n    },\n    AstronautButton: {\n        position: 'relative',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '25vw !important', // Overrides inline-style\n        height: '25vw',\n        borderRadius: '50%',\n    },\n    AstronautDiv: {\n        position: 'absolute',\n        borderRadius: '50%',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        animation: '$swinging 30s infinite linear',\n    },\n    AstronautImg: {\n        backgroundSize: 'cover',\n        background: 'url(' + AstronautImg + ')',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        transition: 'filter 0.5s linear',\n    },\n    MapButton: {\n        position: 'relative',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '25vw !important', // Overrides inline-style\n        height: '25vw',\n        borderRadius: '10%',\n    },\n    MapDiv: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        animation: '$swinging 30s infinite linear',\n    },\n    MapImg: {\n        backgroundSize: 'cover',\n        background: 'url(' + MapImg + ')',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        transition: 'filter 0.5s linear',\n    },\n    mainGridContainer: {\n        height: '100%',\n    },\n    mainGridHeadItem: {\n        maxWidth: '100% !Important',\n    },\n    mainGridBodyItem: {\n        maxWidth: '100% !Important',\n    },\n    menuButtonContainerItem: {\n        maxWidth: '100% !Important',\n    },\n    menuButtonContainer: {\n        height: '100% !Important',\n    },\n    menuButtonGrid: {\n    },\n    menuDivButton: {\n        maxWidth: '100% !Important',\n        padding: '10px',\n    },\n    menuButton: {\n        minWidth: '55vw',\n        maxWidth: '55vw',\n    },\n    mainGridFooterItem: {\n        maxWidth: '100% !Important',\n    },\n    menuButtonContainerFooterLanguageButtons: {\n    },\n    \"@keyframes shine\": {\n        \"0%\": {\n            transform: 'scale(1)',\n            opacity: '1',\n        },\n        \"20%\": {\n            transform: 'scale(.9)',\n            opacity: '.8',\n        },\n        \"40%\": {\n            transform: 'scale(1)',\n            opacity: '.9',\n        },\n        \"60%\": {\n            transform: 'scale(.2)',\n            opacity: '.1',\n        },\n        \"80%\": {\n            transform: 'scale(.5)',\n            opacity: '.5',\n        },\n        \"100%\": {\n            transform: 'scale(.9)',\n            opacity: '.9',\n        },\n    },\n    \"@keyframes moveclouds\": {\n        '100%': {\n            left: '-100%',\n        },\n    },\n    \"@keyframes swinging\": {\n        '0%': {\n            transform: 'rotate(0)',\n        },\n        '10%': {\n            transform: 'rotate(12deg)',\n        },\n        '20%': {\n            transform: 'rotate(-10deg)',\n        },\n        '30%': {\n            transform: 'rotate(9deg)',\n        },\n        '40%': {\n            transform: 'rotate(-8deg)',\n        },\n        '50%': {\n            transform: 'rotate(7deg)',\n        },\n        '60%': {\n            transform: 'rotate(-6deg)',\n        },\n        '70%': {\n            transform: 'rotate(5deg)',\n        },\n        '80%': {\n            transform: 'rotate(-4deg)',\n        },\n        '90%': {\n            transform: 'rotate(3deg)',\n        },\n        '100%': {\n            transform: 'rotate(0)',\n        },\n    }\n}));\n\nconst params = {\n    amountStars: 50,\n    amountClouds: 10,\n    size: {\n        min: 1,\n        max: 5,\n        giant: 9\n    },\n    duration: {\n        min: 5,\n        max: 25,\n    }\n}\n\nfunction randomBetween(a, b) {\n    return (a + (Math.random() * (b - a)));\n}\n\nexport default function App() {\n    const classes = useStyles();\n    const [currentLanguageWords, setCurrentLanguageWords] = useState(EnDict);\n    const [clouds, setClouds] = useState([]);\n    const [stars, setStars] = useState([]);\n    const [theme, setTheme] = useState({\n        palette: {\n            type: \"light\",\n            primary: { main: \"#3f51b5\" },\n            secondary: { main: \"#f50057\" },\n        }\n    });\n\n    const switchMode = () => {\n        let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n        let primaryColor = theme.palette.type === \"light\" ? \"#f9a825\" : \"#3f51b5\";\n        let secondaryColor = theme.palette.type === \"light\" ? \"#f50057\" : \"#f50057\";\n        setTheme({\n            palette: {\n                type: newPaletteType,\n                primary: { main: primaryColor },\n                secondary: { main: secondaryColor },\n            }\n        });\n    }\n\n    const muiTheme = createMuiTheme(theme);\n\n    const onAstronautClick = () => {\n        alert('Тут должны перейти на страницу космонафта');\n    };\n\n    const onMapClick = () => {\n        alert('Тут должны перейти на страницу карты');\n    };\n\n    const changeLanguage = (language) => {\n        if (language === 'Ru') {\n            setCurrentLanguageWords(RuDict);\n        }\n        else {\n            setCurrentLanguageWords(EnDict);\n        }\n    }\n\n    useEffect(() => {\n        for (let i = 0; i < params.amountStars; i++) {\n            let size = Math.round(Math.random() * 10) === 0 ? params.size.giant : randomBetween(params.size.min, params.size.max);\n            setStars(clouds => [...clouds,\n            <div className={classes.AppStar}\n                key={i}\n                style={{\n                    left: randomBetween(0, 100) + \"%\",\n                    top: randomBetween(0, 100) + \"%\",\n                    width: size + \"px\",\n                    height: size + \"px\",\n                    boxShadow: \"0 0 \" + size + \"px \" + size / 2 + \"px #043668\",\n                    animationDuration: randomBetween(params.duration.min, params.duration.max) + \"s\",\n                }}\n            />\n            ]);\n        }\n\n        for (let i = 0; i < params.amountClouds; i++) {\n            let left = Math.round(Math.random() * 50 + 90);\n            let top = Math.round(Math.random() * 100 / 100 * 90);\n            let scale = Math.random() * 1.5 - 0.5;\n            let opacity = Math.random() * 90 / 100;\n            let speed = Math.random() * 30 + 15;\n            setClouds(clouds => [...clouds,\n            <div className={classes.AppCloud}\n                key={i}\n                style={{\n                    left: left + '%',\n                    top: top + '%',\n                    width: '400px',\n                    height: '100px',\n                    transform: 'scale(' + scale + ')',\n                    opacity: opacity,\n                    animationDuration: speed + 's',\n                }} />\n            ]);\n        }\n    }, [classes]);\n\n    return (\n        <MuiThemeProvider theme={muiTheme}>\n            <CssBaseline />\n\n            <div className={classes.AppDivDark}>\n                <div className={classes.AppDivLight} style={theme.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} />\n                {theme.palette.type === \"light\" ?\n                    <div className={classes.AppCloudsDiv} style={theme.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} >\n                        {clouds}\n                    </div>\n                    :\n                    <div className={classes.AppStarsDiv} style={theme.palette.type === \"light\" ? { opacity: 0, } : { opacity: 1, }} >\n                        {stars}\n                    </div>\n                }\n            </div>\n\n            <div className={classes.root}>\n\n                <Grid className={classes.mainGridContainer}\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"stretch\" >\n\n                    <Grid item xs={4} className={classes.mainGridHeadItem} >\n\n                        <Grid container className={classes.mainGridContainer}\n                            direction=\"row\"\n                            justify=\"space-around\"\n                            alignItems=\"stretch\" >\n\n                            <Grid item xs={4} >\n\n                                <ButtonBase className={classes.AstronautButton}\n                                    type='button'\n                                    focusRipple\n                                    onClick={onAstronautClick}>\n                                    <div className={classes.AstronautDiv}>\n                                        <div className={classes.AstronautImg} style={theme.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\n                                    </div>\n                                </ButtonBase>\n\n                            </Grid>\n\n                            <Grid item xs={4} >\n\n                                <ButtonBase className={classes.image}\n                                    type='button'\n                                    focusRipple\n                                    onClick={switchMode}>\n                                    <div className={classes.SkyDiv}>\n                                        <div className={classes.SunSrc} style={theme.palette.type === \"dark\" ? { transform: 'translateY(36vw)' } : { transform: 'translateY(0)' }} />\n                                        <div className={classes.MoonSrc} style={theme.palette.type === \"dark\" ? { transform: 'translateY(0)' } : { transform: 'translateY(-36vw)' }} />\n                                    </div>\n                                </ButtonBase>\n\n                            </Grid>\n\n                            <Grid item xs={4} >\n\n                                <ButtonBase className={classes.MapButton}\n                                    type='button'\n                                    focusRipple\n                                    onClick={onMapClick}>\n                                    <div className={classes.MapDiv}>\n                                        <div className={classes.MapImg} style={theme.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\n                                    </div>\n                                </ButtonBase>\n\n                            </Grid>\n\n                        </Grid>\n\n                    </Grid>\n\n                    <Grid item xs={7} className={classes.mainGridBodyItem} >\n\n                        <Grid className={classes.mainGridContainer}\n                            container\n                            direction=\"column\"\n                            justify=\"center\"\n                            alignItems=\"stretch\" >\n\n                            <Grid className={classes.menuButtonContainer}\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"stretch\" >\n\n                                <Grid item xs={12} className={classes.menuButtonContainerItem} >\n\n                                    <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n                                            {currentLanguageWords.buttons.dreamJoirnal}\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n                                            {currentLanguageWords.buttons.addDream}\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n                                            {currentLanguageWords.buttons.addCDream}\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n                                            {currentLanguageWords.buttons.techniques}\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n                                            {currentLanguageWords.buttons.adventures}\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n                                            {currentLanguageWords.buttons.about}\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n                    </Grid>\n\n                    <Grid item xs={1} className={classes.mainGridFooterItem} >\n\n                        <Grid className={classes.menuButtonContainerFooterLanguageButtons}\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\" >\n\n                            <Grid item>\n                                <Button onClick={() => { changeLanguage('Ru') }}>\n                                    RU\n                                </Button>\n                            </Grid>\n\n                            <Grid item>\n                                <Button onClick={() => { changeLanguage('En') }}>\n                                    EN\n                                </Button>\n                            </Grid>\n\n                        </Grid>\n\n                    </Grid>\n\n                </Grid>\n\n            </div>\n\n        </MuiThemeProvider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}