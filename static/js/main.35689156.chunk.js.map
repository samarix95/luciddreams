{"version":3,"sources":["img/sun.png","img/moon.png","img/astronaut.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","AppDivDark","position","background","opacity","margin","width","height","zIndex","AppDivLight","transition","AppStarsDiv","overflow","AppCloudsDiv","AppStar","borderRadius","filter","animation","AppCloud","backgroundRepeat","backgroundImage","image","left","transform","SkyDiv","top","MoonSrc","backgroundSize","MoonImg","SunSrc","SunImg","AstronautButton","AstronautDiv","AstronautImg","Astronaut","params","amountStars","amountClouds","size","min","max","giant","duration","randomBetween","a","b","Math","random","Boolean","window","location","hostname","match","ReactDOM","render","useState","clouds","setClouds","stars","setStars","classes","palette","type","primary","main","secondary","setTheme","muiTheme","createMuiTheme","useEffect","i","round","className","key","style","boxShadow","animationDuration","scale","speed","console","log","CssBaseline","ButtonBase","focusRipple","onClick","alert","newPaletteType","primaryColor","secondaryColor","switchMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35689156.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.4f817e2f.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.ca0fb531.png\";","module.exports = __webpack_public_path__ + \"static/media/astronaut.7219d35a.png\";","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SunImg from './img/sun.png';\nimport MoonImg from './img/moon.png';\nimport Astronaut from './img/astronaut.png';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst useStyles = makeStyles(theme => ({\n    AppDivDark: {\n        position: 'absolute',\n        background: 'radial-gradient(ellipse at center, rgba(8, 25, 42, 1) 20%, rgba(1, 4, 6, 1) 100%)',\n        opacity: 1,\n        margin: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -3,\n    },\n    AppDivLight: {\n        position: 'absolute',\n        background: 'radial-gradient(ellipse at center, rgba(207, 225, 237, 1) 20%, rgba(127, 170, 202, 1) 100%)',\n        transition: 'opacity 0.5s linear',\n        margin: 0,\n        opacity: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -3,\n    },\n    AppStarsDiv: {\n        transition: 'opacity 0.5s linear',\n        opacity: 0,\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        zIndex: -2,\n    },\n    AppCloudsDiv: {\n        transition: 'opacity 0.5s linear',\n        opacity: 0,\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        zIndex: -2,\n    },\n    AppStar: {\n        borderRadius: '100%',\n        position: 'absolute',\n        background: 'radial-gradient(ellipse at center, rgba(177, 198, 219, 1) 2%, rgba(5, 63, 118, 1) 100%)',\n        filter: 'blur(1px)',\n        animation: '$shine infinite alternate',\n        zIndex: -1,\n    },\n    AppCloud: {\n        position: 'absolute',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: 'url(https://www.turbotobias.dk/wp-content/uploads/2019/03/White-cloud-type3.svg)',\n        animation: '$moveclouds 50s infinite linear',\n        zIndex: -1,\n    },\n    image: {\n        position: 'absolute',\n        left: '50%',\n        //top: '50%',\n        transform: 'translate(-50%, 50%)',\n        width: '30vw !important', // Overrides inline-style\n        height: '30vw',\n        borderRadius: '50%',\n    },\n    SkyDiv: {\n        position: 'absolute',\n        borderRadius: 50,\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n    },\n    MoonSrc: {\n        backgroundSize: 'cover',\n        background: 'url(' + MoonImg + ')',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        transition: 'all 0.3s linear',\n    },\n    SunSrc: {\n        backgroundSize: 'cover',\n        background: 'url(' + SunImg + ')',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        transition: 'all 0.3s linear',\n    },\n    AstronautButton: {\n        position: 'absolute',\n        left: '25%',\n        //top: '50%',\n        transform: 'translate(-50%, 50%)',\n        width: '20vw !important', // Overrides inline-style\n        height: '20vw',\n        borderRadius: '50%',\n    },\n    AstronautDiv: {\n        position: 'absolute',\n        borderRadius: 50,\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        animation: '$swinging 20s infinite ease-in-out 0s',\n    },\n    AstronautImg: {\n        backgroundSize: 'cover',\n        background: 'url(' + Astronaut + ')',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        transition: 'filter 0.5s linear',\n    },\n    \"@keyframes shine\": {\n        \"0%\": {\n            transform: 'scale(1)',\n            opacity: '1',\n        },\n        \"20%\": {\n            transform: 'scale(.9)',\n            opacity: '.8',\n        },\n        \"40%\": {\n            transform: 'scale(1)',\n            opacity: '.9',\n        },\n        \"60%\": {\n            transform: 'scale(.2)',\n            opacity: '.1',\n        },\n        \"80%\": {\n            transform: 'scale(.5)',\n            opacity: '.5',\n        },\n        \"100%\": {\n            transform: 'scale(.9)',\n            opacity: '.9',\n        },\n    },\n    \"@keyframes moveclouds\": {\n        '100%': {\n            left: '-100%',\n        },\n    },\n    \"@keyframes swinging\": {\n        '0%': {\n            transform: 'rotate(0)',\n        },\n        '10%': {\n            transform: 'rotate(12deg)',\n        },\n        '20%': {\n            transform: 'rotate(-10deg)',\n        },\n        '30%': {\n            transform: 'rotate(9deg)',\n        },\n        '40%': {\n            transform: 'rotate(-8deg)',\n        },\n        '50%': {\n            transform: 'rotate(7deg)',\n        },\n        '60%': {\n            transform: 'rotate(-6deg)',\n        },\n        '70%': {\n            transform: 'rotate(5deg)',\n        },\n        '80%': {\n            transform: 'rotate(-4deg)',\n        },\n        '90%': {\n            transform: 'rotate(3deg)',\n        },\n        '100%': {\n            transform: 'rotate(0)',\n        },\n    }\n}));\n\nconst params = {\n    amountStars: 50,\n    amountClouds: 5,\n    size: {\n        min: 1,\n        max: 5,\n        giant: 9\n    },\n    duration: {\n        min: 5,\n        max: 25,\n    }\n}\n\nfunction randomBetween(a, b) {\n    return (a + (Math.random() * (b - a)));\n}\n\nexport default function App() {\n    const [clouds, setClouds] = useState([]);\n    const [stars, setStars] = useState([]);\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            type: \"light\",\n            primary: { main: \"#3f51b5\" },\n            secondary: { main: \"#f50057\" },\n        }\n    });\n\n    const switchMode = () => {\n        let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n        let primaryColor = theme.palette.type === \"light\" ? \"#f9a825\" : \"#3f51b5\";\n        let secondaryColor = theme.palette.type === \"light\" ? \"#f50057\" : \"#f50057\";\n        setTheme({\n            palette: {\n                type: newPaletteType,\n                primary: { main: primaryColor },\n                secondary: { main: secondaryColor },\n            }\n        });\n    }\n\n    const muiTheme = createMuiTheme(theme);\n\n    useEffect(() => {\n        for (let i = 0; i < params.amountStars; i++) {\n            let size = Math.round(Math.random() * 10) === 0 ? params.size.giant : randomBetween(params.size.min, params.size.max);\n            setStars(clouds => [...clouds,\n            <div className={classes.AppStar}\n                key={i}\n                style={{\n                    left: randomBetween(0, 100) + \"%\",\n                    top: randomBetween(0, 100) + \"%\",\n                    width: size + \"px\",\n                    height: size + \"px\",\n                    boxShadow: \"0 0 \" + size + \"px \" + size / 2 + \"px #043668\",\n                    animationDuration: randomBetween(params.duration.min, params.duration.max) + \"s\",\n                }}\n            />\n            ]);\n        }\n\n        for (let i = 0; i < params.amountClouds; i++) {\n            let left = Math.random() * 150 / 100 + 100;\n            let top = Math.random() * 100 / 100 * 90;\n            let scale = Math.random() * 1.5 - 0.5;\n            let opacity = Math.random() * 90 / 100;\n            let speed = Math.random() * 20 + 10;\n            console.log(speed);\n            setClouds(clouds => [...clouds,\n            <div className={classes.AppCloud}\n                key={i}\n                style={{\n                    left: left + '%',\n                    top: top + '%',\n                    width: '400px',\n                    height: '100px',\n                    transform: 'scale(' + scale + ')',\n                    opacity: opacity,\n                }} />\n            ]);\n        }\n    }, [classes]);\n\n    return (\n        <MuiThemeProvider theme={muiTheme}>\n            <CssBaseline />\n\n            <div className={classes.AppDivDark}>\n                <div className={classes.AppDivLight} style={theme.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} />\n                {theme.palette.type === \"light\" ?\n                    <div className={classes.AppCloudsDiv} style={theme.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} >\n                        {clouds}\n                    </div>\n                    :\n                    <div className={classes.AppStarsDiv} style={theme.palette.type === \"light\" ? { opacity: 0, } : { opacity: 1, }} >\n                        {stars}\n                    </div>\n                }\n            </div>\n\n            <ButtonBase className={classes.AstronautButton}\n                type='button'\n                focusRipple\n                onClick={() => { alert('Dont click on me!') }}>\n                <div className={classes.AstronautDiv}>\n                    <div className={classes.AstronautImg}\n                        style={ theme.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', } }\n                        //src={Astronaut}\n                        //alt='Sun' \n                        />\n                </div>\n            </ButtonBase>\n\n            <ButtonBase className={classes.image}\n                type='button'\n                focusRipple\n                onClick={() => { switchMode() }}>\n                <div className={classes.SkyDiv}>\n                    <div className={classes.SunSrc}\n                        style={theme.palette.type === \"dark\" ? { transform: 'translateY(31vw)' } : { transform: 'translateY(0)' }}\n                    //src={SunImg}\n                    //alt='Sun' \n                    />\n                    <div className={classes.MoonSrc}\n                        style={theme.palette.type === \"dark\" ? { transform: 'translateY(0)' } : { transform: 'translateY(-31vw)' }}\n                    //src={MoonImg}\n                    //alt='Moon' \n                    />\n                </div>\n            </ButtonBase>\n        </MuiThemeProvider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}