{"version":3,"sources":["PrivateRoute.js","App.js","serviceWorker.js","index.js","historyPath.js","actions/types.js","actions/actions.js","reducers/dialogConfirmReducer.js","reducers/snackbarReducer.js","reducers/addPostCommentReducer.js","reducers/updatePostCommentReducer.js","reducers/index.js","store.js","dictionary/index.js","dictionary/ru.js","dictionary/en.js","reducers/languageReducer.js","reducers/authReducer.js","reducers/appThemeReducer.js","history.js","functions/auth.js","reducers/technicsReducer.js","reducers/userPostsReducer.js","reducers/tagsReducer.js","reducers/postCommentsReducer.js","reducers/addPostReducer.js","reducers/updatePostReducer.js","reducers/deletePostReducer.js","reducers/searchIconReducer.js","reducers/addLocationReducer.js"],"names":["connect","store","auth","getAuth","Component","component","rest","render","props","to","historyPath","Sign","signPromise","React","lazy","signinPromise","SignIn","signupPromise","SignUp","mainPagePromise","MainPage","dreamsPromise","Dreams","ReadDreamPromise","ReadDream","addDreamPromise","AddDream","editDreamPromise","EditDream","addLocationPromise","AddLocation","technicsPromise","Technics","readTechnicPromise","ReadTechnic","editTechnicPromise","EditTechnic","userLang","navigator","language","userLanguage","substr","toLowerCase","MuiAlert","Alert","elevation","variant","history","push","checkToken","appTheme","getThemePalette","getLanguage","snackbarOpen","getSnackbarOpen","snackbarData","getSnackbarData","dialogConfirmOpen","getDialogConfirmOpen","dialogConfirmData","getDialogConfirmData","dispatch","bindActionCreators","setLanguage","closeSnackbar","setCloseSnackbar","cancelDialogConfirm","setCancelDialogConfirm","acceptDialogConfirm","setAcceptDialogConfirm","muitheme","createMuiTheme","Object","assign","overrides","MUIRichTextEditor","toolbar","display","alignItems","justifyContent","handleCloseSnackbar","event","reason","hadleCancelConfirmDialog","theme","CssBaseline","Suspense","fallback","dict","texts","Loading","Snackbar","open","autoHideDuration","onClose","severity","message","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","DialogActions","Button","onClick","size","color","buttons","Cancel","Accept","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","SET_THEME","SET_LANGUAGE","SET_OPEN_SNACKBAR","SET_CLOSE_SNACKBAR","SET_CONFIRM_DIALOG_OPEN","SET_CONFIRM_DIALOG_CANCEL","SET_CONFIRM_DIALOG_ACCEPT","SET_CONFIRM_DIALOG_RESET_ACCEPT","SET_USER_DATA","SET_USER_LOADING","RESET_USER_DATA","SET_TECHNICS_PENDING","SET_TECHNICS_DATA","SET_TECHNICS_ERROR","SET_TAGS_PENDING","SET_TAGS_DATA","SET_TAGS_ERROR","SET_USER_POSTS_PENDING","SET_USER_POSTS_DATA","SET_USER_POSTS_ERROR","SET_ADD_POST_PENDING","SET_ADD_POST_DATA","SET_ADD_POST_ERROR","SET_UPDATE_POST_PENDING","SET_UPDATE_POST_DATA","SET_UPDATE_POST_ERROR","SET_DELETE_POST_PENDING","SET_DELETE_POST_DATA","SET_DELETE_POST_ERROR","SET_POST_COMMENTS_PENDING","SET_POST_COMMENTS_DATA","SET_POST_COMMENTS_ERROR","CLEAR_POST_COMMENTS","SET_ADD_POST_COMMENT_PENDING","SET_ADD_POST_COMMENT_DATA","SET_ADD_POST_COMMENT_ERROR","SET_UPDATE_POST_COMMENT_PENDING","SET_UPDATE_POST_COMMENT_DATA","SET_UPDATE_POST_COMMENT_ERROR","SET_SEARCH_ICON_PENDING","SET_SEARCH_ICON_DATA","SET_SEARCH_ICON_ERROR","SET_ADD_LOCATION_PENDING","SET_ADD_LOCATION_DATA","SET_ADD_LOCATION_ERROR","data","type","lang","setOpenSnackbar","setOpenDialogConfirm","setResetDialogConfirm","setUserPending","setUserData","resetUserData","setTechnicsPending","setTechnicsData","setTechnicsError","setTagsPending","setTagsData","setTagsError","setUserPostsPending","setUserPostsData","setUserPostsError","setAddPostPending","setAddPostData","setAddPostError","setUpdatePostPending","setUpdatePostData","setUpdatePostError","setDeletePostPending","setDeletePostData","setDeletePostError","setPostCommentsPending","setPostCommentsData","setPostCommentsError","clearPostComments","setAddPostCommentsPending","setAddPostCommentsData","setAddPostCommentsError","setUpdatePostCommentsPending","setUpdatePostCommentsData","setUpdatePostCommentsError","setSearchIconPending","setSearchIconData","setSearchIconError","setAddLocationPending","setAddLocationData","setAddLocationError","initialState","isOpen","action","dialogConfirmReducer","state","dialogConfirm","getDialogConfirmAction","snackbarReducer","snackbar","pending","rootReducer","combineReducers","appThemeReducer","languageReducer","authData","authDataReducer","technics","technicsReducer","tags","tagsReducer","userPosts","userPostsReducer","addPost","addPostReducer","updatePost","updatePostReducer","deletePost","deletePostReducer","postComments","postCommentsReducer","addPostComment","updatePostComment","searchIcon","searchIconReducer","addLocation","addLocationReducer","middlewares","thunk","createStore","composeWithDevTools","applyMiddleware","ru","SUCCESS","Wellcome","SignPageText1","SignPageText2","SignPageText3","Email","Password","Nickname","Settings","Editing","Title","Date","Description","Locations","Filter","Sort","CancelEditing","CancelCreating","DataWillLost","DeleteTitle","DeleteCommentMessage","DeletePostMessage","Dream","LucidDream","RegularDream","Realistic","UsersCanRead","UsersCantRead","AddComment","DeletedComment","NotHaveComments","Ru","En","FindIcon","Icon","IconColor","FindIcon0","FindIcon1","FindIcon2","FindIcon3","FindIcon4","LogOut","Read","Back","Close","Reset","Reply","Edit","Save","Add","Delete","Main","MyDreams","errors","CREATE_ERROR","RETRIEVE_ERROR","SIGN_UP_ERROR","UPDATE_ERROR","DELETE_ERROR","USER_NOT_FOUND","EMAIL_IS_BUSY","INVALID_EMAIL","INVALID_PASSWORD","EMPTY_PASSWORD","EMPTY_LOGIN","EMPTY_NICKNAME","NICKNAME_IS_BUSY","UPDATE_USER_ERROR","UPDATE_USER_SUCCESS","NO_TOKEN_PROVIDED","INVALID_TOKEN","EMPTY_TITLE","EMPTY_DESCRIPTION","NO_ICON","EMPTY_DREAM","DELETED","ENGLISH_WORDS_ONLY","en","isAuth","getAuthPending","getAuthData","palette","primary","main","secondary","createBrowserHistory","localStorage","token","decoded","jwt_decode","exp","now","alert","setToken","setItem","removeToken","removeItem","getTechnicsPending","getTechnicsData","getUserPostsPending","getUserPostsData","getTagsPending","getTagsData","getPostCommentsPending","getPostCommentsData","getAddPostPending","getUpdatePostPending","getDeletePostPending","getSearchIconPending","getSearchIconData","getAddLocationPending"],"mappings":"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","file":"static/js/main.e4ebf8eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { getAuth } from \"./reducers/authReducer\";\r\nimport historyPath from \"./historyPath\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={\r\n            props => auth\r\n                ? <Component {...props} />\r\n                : <Redirect to={historyPath.Sign} />\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        auth: getAuth(store)\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(PrivateRoute);","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\n\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport history from \"./history\";\nimport historyPath from \"./historyPath\"\nimport PrivateRoute from \"./PrivateRoute\";\nimport dict from \"./dictionary\";\n\nimport { checkToken } from \"./functions/auth\";\nimport { setLanguage, setCloseSnackbar, setCancelDialogConfirm, setAcceptDialogConfirm } from \"./actions/actions\";\nimport { getSnackbarOpen, getSnackbarData } from \"./reducers/snackbarReducer\";\nimport { getDialogConfirmOpen, getDialogConfirmData } from \"./reducers/dialogConfirmReducer\";\nimport { getThemePalette } from \"./reducers/appThemeReducer\";\nimport { getLanguage } from \"./reducers/languageReducer\";\n\nconst signPromise = import(\"./components/Sign\");\nconst Sign = React.lazy(() => signPromise);\nconst signinPromise = import(\"./components/SignIn\");\nconst SignIn = React.lazy(() => signinPromise);\nconst signupPromise = import(\"./components/SignUp\");\nconst SignUp = React.lazy(() => signupPromise);\n\nconst mainPagePromise = import(\"./components/MainPage\");\nconst MainPage = React.lazy(() => mainPagePromise);\n\nconst dreamsPromise = import(\"./components/Dreams\");\nconst Dreams = React.lazy(() => dreamsPromise);\nconst ReadDreamPromise = import(\"./components/readPages/ReadDream\");\nconst ReadDream = React.lazy(() => ReadDreamPromise);\nconst addDreamPromise = import(\"./components/addPages/AddDream\");\nconst AddDream = React.lazy(() => addDreamPromise);\nconst editDreamPromise = import(\"./components/editPages/EditDream\");\nconst EditDream = React.lazy(() => editDreamPromise);\n\nconst addLocationPromise = import(\"./components/addPages/AddLocation\");\nconst AddLocation = React.lazy(() => addLocationPromise);\n\nconst technicsPromise = import(\"./components/Technics\");\nconst Technics = React.lazy(() => technicsPromise);\nconst readTechnicPromise = import(\"./components/readPages/ReadTechnic\");\nconst ReadTechnic = React.lazy(() => readTechnicPromise);\nconst editTechnicPromise = import(\"./components/editPages/EditTechnics\");\nconst EditTechnic = React.lazy(() => editTechnicPromise);\n\nconst userLang = (navigator.language || navigator.userLanguage).substr(0, 2).toLowerCase();\nhistory.push(checkToken() ? historyPath.MainPage : historyPath.Sign);\n\nfunction MuiAlert(props) {\n\treturn (\n\t\t<Alert elevation={6} variant=\"filled\" {...props} />\n\t)\n}\n\nfunction App(props) {\n\tconst { appTheme, language, snackbarOpen, snackbarData, setLanguage, closeSnackbar, dialogConfirmOpen, dialogConfirmData, cancelDialogConfirm, acceptDialogConfirm } = props;\n\tconst muitheme = createMuiTheme(appTheme);\n\tObject.assign(muitheme, {\n\t\toverrides: {\n\t\t\tMUIRichTextEditor: {\n\t\t\t\ttoolbar: {\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tjustifyContent: \"center\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tconst handleCloseSnackbar = (event, reason) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn;\n\t\t}\n\t\tcloseSnackbar();\n\t};\n\n\tconst hadleCancelConfirmDialog = () => {\n\t\tcancelDialogConfirm()\n\t};\n\n\tconst hadleAcceptConfirmDialog = () => {\n\t\tacceptDialogConfirm()\n\t};\n\n\tsetLanguage(userLang);\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<MuiThemeProvider theme={muitheme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<React.Suspense\n\t\t\t\t\tfallback={\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{dict[language].texts.Loading}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={handleCloseSnackbar}>\n\t\t\t\t\t\t<MuiAlert onClose={handleCloseSnackbar} severity={snackbarData.variant}>\n\t\t\t\t\t\t\t{snackbarData.message}\n\t\t\t\t\t\t</MuiAlert>\n\t\t\t\t\t</Snackbar>\n\t\t\t\t\t<Dialog\n\t\t\t\t\t\topen={dialogConfirmOpen}\n\t\t\t\t\t\tonClose={hadleCancelConfirmDialog}\n\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\n\t\t\t\t\t\t\t{dialogConfirmData.title}\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\t\t\t\t{dialogConfirmData.message}\n\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button onClick={hadleCancelConfirmDialog} size=\"small\" color=\"primary\" variant=\"outlined\">\n\t\t\t\t\t\t\t\t{dict[language].buttons.Cancel}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={hadleAcceptConfirmDialog} size=\"small\" color=\"primary\" variant=\"outlined\">\n\t\t\t\t\t\t\t\t{dict[language].buttons.Accept}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Dialog>\n\t\t\t\t\t<Route exact path={historyPath.Sign} component={Sign} />\n\t\t\t\t\t<Route path={historyPath.SignIn} component={SignIn} />\n\t\t\t\t\t<Route path={historyPath.SignUp} component={SignUp} />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<PrivateRoute exact path={historyPath.MainPage} component={MainPage} />\n\t\t\t\t\t\t{/* <PrivateRoute exact path={historyPath.MainPage} component={Dreams} /> */}\n\n\t\t\t\t\t\t<PrivateRoute exact path={historyPath.Dreams} component={Dreams} />\n\t\t\t\t\t\t<PrivateRoute path={historyPath.ReadDream} component={ReadDream} />\n\t\t\t\t\t\t<PrivateRoute path={historyPath.AddDream} component={AddDream} />\n\t\t\t\t\t\t<PrivateRoute path={historyPath.EditDream} component={EditDream} />\n\n\t\t\t\t\t\t<PrivateRoute path={historyPath.AddLocation} component={AddLocation} />\n\n\t\t\t\t\t\t<PrivateRoute exact path={historyPath.Technics} component={Technics} />\n\t\t\t\t\t\t<PrivateRoute path={historyPath.ReadTechnic} component={ReadTechnic} />\n\t\t\t\t\t\t<PrivateRoute path={historyPath.EditTechnic} component={EditTechnic} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</React.Suspense>\n\t\t\t</MuiThemeProvider>\n\t\t</Router>\n\t);\n}\n\nApp.propTypes = {\n\tappTheme: PropTypes.object.isRequired,\n\tlanguage: PropTypes.string.isRequired,\n\tsnackbarOpen: PropTypes.bool.isRequired,\n\tsnackbarData: PropTypes.object.isRequired,\n\tdialogConfirmOpen: PropTypes.bool.isRequired,\n\tdialogConfirmData: PropTypes.object.isRequired,\n\tsetLanguage: PropTypes.func.isRequired,\n\tcloseSnackbar: PropTypes.func.isRequired,\n\tcancelDialogConfirm: PropTypes.func.isRequired,\n\tacceptDialogConfirm: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = store => {\n\treturn {\n\t\tappTheme: getThemePalette(store),\n\t\tlanguage: getLanguage(store),\n\t\tsnackbarOpen: getSnackbarOpen(store),\n\t\tsnackbarData: getSnackbarData(store),\n\t\tdialogConfirmOpen: getDialogConfirmOpen(store),\n\t\tdialogConfirmData: getDialogConfirmData(store)\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n\tsetLanguage: setLanguage,\n\tcloseSnackbar: setCloseSnackbar,\n\tcancelDialogConfirm: setCancelDialogConfirm,\n\tacceptDialogConfirm: setAcceptDialogConfirm\n}, dispatch);\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\r\n    Sign: \"/sign\",\r\n    SignIn: \"/signin\",\r\n    SignUp: \"/signup\",\r\n\r\n    MainPage: \"/\",\r\n\r\n    Dreams: \"/dreams\",\r\n    ReadDream: \"/dreams/read\",\r\n    EditDream: \"/dreams/edit\",\r\n    AddDream: \"/dreams/add\",\r\n\r\n    AddLocation: \"/locations/add\",\r\n\r\n    Technics: \"/technics\",\r\n    ReadTechnic: \"/technics/read\",\r\n    EditTechnic: \"/technics/edit\"\r\n}","export const SET_THEME = \"SET_THEME\";\r\n\r\nexport const SET_LANGUAGE = \"SET_LANGUAGE\";\r\n\r\nexport const SET_OPEN_SNACKBAR = \"SET_OPEN_SNACKBAR\";\r\nexport const SET_CLOSE_SNACKBAR = \"SET_CLOSE_SNACKBAR\";\r\n\r\nexport const SET_CONFIRM_DIALOG_OPEN = \"SET_CONFIRM_DIALOG_OPEN\";\r\nexport const SET_CONFIRM_DIALOG_CANCEL = \"SET_CONFIRM_DIALOG_CANCEL\";\r\nexport const SET_CONFIRM_DIALOG_ACCEPT = \"SET_CONFIRM_DIALOG_ACCEPT\";\r\nexport const SET_CONFIRM_DIALOG_RESET_ACCEPT = \"SET_CONFIRM_DIALOG_RESET_ACCEPT\";\r\n\r\nexport const SET_USER_DATA = \"SET_USER_DATA\";\r\nexport const SET_USER_LOADING = \"SET_USER_LOADING\";\r\nexport const RESET_USER_DATA = \"RESET_USER_DATA\";\r\n\r\nexport const SET_TECHNICS_PENDING = \"SET_TECHNICS_PENDING\";\r\nexport const SET_TECHNICS_DATA = \"SET_TECHNICS_DATA\";\r\nexport const SET_TECHNICS_ERROR = \"SET_TECHNICS_ERROR\";\r\n\r\nexport const SET_TAGS_PENDING = \"SET_TAGS_PENDING\";\r\nexport const SET_TAGS_DATA = \"SET_TAGS_DATA\";\r\nexport const SET_TAGS_ERROR = \"SET_TAGS_ERROR\";\r\n\r\nexport const SET_USER_POSTS_PENDING = \"SET_USER_POSTS_PENDING\";\r\nexport const SET_USER_POSTS_DATA = \"SET_USER_POSTS_DATA\";\r\nexport const SET_USER_POSTS_ERROR = \"SET_USER_POSTS_ERROR\";\r\n\r\nexport const SET_ADD_POST_PENDING = \"SET_ADD_POST_PENDING\";\r\nexport const SET_ADD_POST_DATA = \"SET_ADD_POST_DATA\";\r\nexport const SET_ADD_POST_ERROR = \"SET_ADD_POST_ERROR\";\r\n\r\nexport const SET_UPDATE_POST_PENDING = \"SET_UPDATE_POST_PENDING\";\r\nexport const SET_UPDATE_POST_DATA = \"SET_UPDATE_POST_DATA\";\r\nexport const SET_UPDATE_POST_ERROR = \"SET_UPDATE_POST_ERROR\";\r\n\r\nexport const SET_DELETE_POST_PENDING = \"SET_DELETE_POST_PENDING\";\r\nexport const SET_DELETE_POST_DATA = \"SET_DELETE_POST_DATA\";\r\nexport const SET_DELETE_POST_ERROR = \"SET_DELETE_POST_ERROR\";\r\n\r\nexport const SET_POST_COMMENTS_PENDING = \"SET_POST_COMMENTS_PENDING\";\r\nexport const SET_POST_COMMENTS_DATA = \"SET_POST_COMMENTS_DATA\";\r\nexport const SET_POST_COMMENTS_ERROR = \"SET_POST_COMMENTS_ERROR\";\r\nexport const CLEAR_POST_COMMENTS = \"CLEAR_POST_COMMENTS\";\r\n\r\nexport const SET_ADD_POST_COMMENT_PENDING = \"SET_ADD_POST_COMMENT_PENDING\";\r\nexport const SET_ADD_POST_COMMENT_DATA = \"SET_ADD_POST_COMMENT_DATA\";\r\nexport const SET_ADD_POST_COMMENT_ERROR = \"SET_ADD_POST_COMMENT_ERROR\";\r\n\r\nexport const SET_UPDATE_POST_COMMENT_PENDING = \"SET_UPDATE_POST_COMMENT_PENDING\";\r\nexport const SET_UPDATE_POST_COMMENT_DATA = \"SET_UPDATE_POST_COMMENT_DATA\";\r\nexport const SET_UPDATE_POST_COMMENT_ERROR = \"SET_UPDATE_POST_COMMENT_ERROR\";\r\n\r\nexport const SET_SEARCH_ICON_PENDING = \"SET_SEARCH_ICON_PENDING\";\r\nexport const SET_SEARCH_ICON_DATA = \"SET_SEARCH_ICON_DATA\";\r\nexport const SET_SEARCH_ICON_ERROR = \"SET_SEARCH_ICON_ERROR\";\r\n\r\nexport const SET_ADD_LOCATION_PENDING = \"SET_ADD_LOCATION_PENDING\";\r\nexport const SET_ADD_LOCATION_DATA = \"SET_ADD_LOCATION_DATA\";\r\nexport const SET_ADD_LOCATION_ERROR = \"SET_ADD_LOCATION_ERROR\";","import {\r\n    SET_THEME,\r\n    SET_LANGUAGE,\r\n    SET_OPEN_SNACKBAR, SET_CLOSE_SNACKBAR,\r\n    SET_CONFIRM_DIALOG_OPEN, SET_CONFIRM_DIALOG_CANCEL, SET_CONFIRM_DIALOG_ACCEPT, SET_CONFIRM_DIALOG_RESET_ACCEPT,\r\n    SET_USER_DATA, SET_USER_LOADING, RESET_USER_DATA,\r\n    SET_TECHNICS_PENDING, SET_TECHNICS_DATA, SET_TECHNICS_ERROR,\r\n    SET_TAGS_PENDING, SET_TAGS_DATA, SET_TAGS_ERROR,\r\n    SET_USER_POSTS_PENDING, SET_USER_POSTS_DATA, SET_USER_POSTS_ERROR,\r\n    SET_ADD_POST_PENDING, SET_ADD_POST_DATA, SET_ADD_POST_ERROR,\r\n    SET_UPDATE_POST_PENDING, SET_UPDATE_POST_DATA, SET_UPDATE_POST_ERROR,\r\n    SET_DELETE_POST_PENDING, SET_DELETE_POST_DATA, SET_DELETE_POST_ERROR,\r\n    SET_POST_COMMENTS_PENDING, SET_POST_COMMENTS_DATA, SET_POST_COMMENTS_ERROR, CLEAR_POST_COMMENTS,\r\n    SET_ADD_POST_COMMENT_PENDING, SET_ADD_POST_COMMENT_DATA, SET_ADD_POST_COMMENT_ERROR,\r\n    SET_UPDATE_POST_COMMENT_PENDING, SET_UPDATE_POST_COMMENT_DATA, SET_UPDATE_POST_COMMENT_ERROR,\r\n    SET_SEARCH_ICON_PENDING, SET_SEARCH_ICON_DATA, SET_SEARCH_ICON_ERROR,\r\n    SET_ADD_LOCATION_PENDING, SET_ADD_LOCATION_DATA, SET_ADD_LOCATION_ERROR\r\n} from \"./types\";\r\n\r\nexport function setAppTheme(data) {\r\n    return {\r\n        type: SET_THEME,\r\n        palette: data\r\n    }\r\n}\r\n\r\nexport function setLanguage(data) {\r\n    return {\r\n        type: SET_LANGUAGE,\r\n        lang: data\r\n    }\r\n}\r\n\r\nexport function setOpenSnackbar(data) {\r\n    return {\r\n        type: SET_OPEN_SNACKBAR,\r\n        data: data\r\n    }\r\n}\r\nexport function setCloseSnackbar() {\r\n    return {\r\n        type: SET_CLOSE_SNACKBAR\r\n    }\r\n}\r\n\r\nexport function setOpenDialogConfirm(data) {\r\n    return {\r\n        type: SET_CONFIRM_DIALOG_OPEN,\r\n        data: data\r\n    }\r\n}\r\nexport function setCancelDialogConfirm() {\r\n    return {\r\n        type: SET_CONFIRM_DIALOG_CANCEL\r\n    }\r\n}\r\nexport function setAcceptDialogConfirm() {\r\n    return {\r\n        type: SET_CONFIRM_DIALOG_ACCEPT\r\n    }\r\n}\r\nexport function setResetDialogConfirm() {\r\n    return {\r\n        type: SET_CONFIRM_DIALOG_RESET_ACCEPT\r\n    }\r\n}\r\n\r\nexport function setUserPending() {\r\n    return {\r\n        type: SET_USER_LOADING\r\n    }\r\n}\r\nexport function setUserData(data) {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function resetUserData() {\r\n    return {\r\n        type: RESET_USER_DATA\r\n    }\r\n}\r\n\r\nexport function setTechnicsPending() {\r\n    return {\r\n        type: SET_TECHNICS_PENDING\r\n    }\r\n}\r\nexport function setTechnicsData(data) {\r\n    return {\r\n        type: SET_TECHNICS_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setTechnicsError() {\r\n    return {\r\n        type: SET_TECHNICS_ERROR\r\n    }\r\n}\r\n\r\nexport function setTagsPending() {\r\n    return {\r\n        type: SET_TAGS_PENDING\r\n    }\r\n}\r\nexport function setTagsData(data) {\r\n    return {\r\n        type: SET_TAGS_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setTagsError() {\r\n    return {\r\n        type: SET_TAGS_ERROR\r\n    }\r\n}\r\n\r\nexport function setUserPostsPending() {\r\n    return {\r\n        type: SET_USER_POSTS_PENDING\r\n    }\r\n}\r\nexport function setUserPostsData(data) {\r\n    return {\r\n        type: SET_USER_POSTS_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setUserPostsError() {\r\n    return {\r\n        type: SET_USER_POSTS_ERROR\r\n    }\r\n}\r\n\r\nexport function setAddPostPending() {\r\n    return {\r\n        type: SET_ADD_POST_PENDING\r\n    }\r\n}\r\nexport function setAddPostData(data) {\r\n    return {\r\n        type: SET_ADD_POST_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setAddPostError() {\r\n    return {\r\n        type: SET_ADD_POST_ERROR\r\n    }\r\n}\r\n\r\nexport function setUpdatePostPending() {\r\n    return {\r\n        type: SET_UPDATE_POST_PENDING\r\n    }\r\n}\r\nexport function setUpdatePostData(data) {\r\n    return {\r\n        type: SET_UPDATE_POST_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setUpdatePostError() {\r\n    return {\r\n        type: SET_UPDATE_POST_ERROR\r\n    }\r\n}\r\n\r\nexport function setDeletePostPending() {\r\n    return {\r\n        type: SET_DELETE_POST_PENDING\r\n    }\r\n}\r\nexport function setDeletePostData(data) {\r\n    return {\r\n        type: SET_DELETE_POST_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setDeletePostError() {\r\n    return {\r\n        type: SET_DELETE_POST_ERROR\r\n    }\r\n}\r\n\r\nexport function setPostCommentsPending() {\r\n    return {\r\n        type: SET_POST_COMMENTS_PENDING\r\n    }\r\n}\r\nexport function setPostCommentsData(data) {\r\n    return {\r\n        type: SET_POST_COMMENTS_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setPostCommentsError() {\r\n    return {\r\n        type: SET_POST_COMMENTS_ERROR\r\n    }\r\n}\r\nexport function clearPostComments() {\r\n    return {\r\n        type: CLEAR_POST_COMMENTS\r\n    }\r\n}\r\n\r\nexport function setAddPostCommentsPending() {\r\n    return {\r\n        type: SET_ADD_POST_COMMENT_PENDING\r\n    }\r\n}\r\nexport function setAddPostCommentsData(data) {\r\n    return {\r\n        type: SET_ADD_POST_COMMENT_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setAddPostCommentsError() {\r\n    return {\r\n        type: SET_ADD_POST_COMMENT_ERROR\r\n    }\r\n}\r\n\r\nexport function setUpdatePostCommentsPending() {\r\n    return {\r\n        type: SET_UPDATE_POST_COMMENT_PENDING\r\n    }\r\n}\r\nexport function setUpdatePostCommentsData(data) {\r\n    return {\r\n        type: SET_UPDATE_POST_COMMENT_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setUpdatePostCommentsError() {\r\n    return {\r\n        type: SET_UPDATE_POST_COMMENT_ERROR\r\n    }\r\n}\r\n\r\nexport function setSearchIconPending() {\r\n    return {\r\n        type: SET_SEARCH_ICON_PENDING\r\n    }\r\n}\r\nexport function setSearchIconData(data) {\r\n    return {\r\n        type: SET_SEARCH_ICON_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setSearchIconError() {\r\n    return {\r\n        type: SET_SEARCH_ICON_ERROR\r\n    }\r\n}\r\n\r\nexport function setAddLocationPending() {\r\n    return {\r\n        type: SET_ADD_LOCATION_PENDING\r\n    }\r\n}\r\nexport function setAddLocationData(data) {\r\n    return {\r\n        type: SET_ADD_LOCATION_DATA,\r\n        data: data\r\n    }\r\n}\r\nexport function setAddLocationError() {\r\n    return {\r\n        type: SET_ADD_LOCATION_ERROR\r\n    }\r\n}","import { SET_CONFIRM_DIALOG_OPEN, SET_CONFIRM_DIALOG_CANCEL, SET_CONFIRM_DIALOG_ACCEPT, SET_CONFIRM_DIALOG_RESET_ACCEPT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    isOpen: false,\r\n    data: {\r\n        title: \"\",\r\n        message: \"\"\r\n    },\r\n    action: null\r\n};\r\n\r\nexport function dialogConfirmReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CONFIRM_DIALOG_OPEN:\r\n            return {\r\n                ...state,\r\n                isOpen: true,\r\n                data: action.data\r\n            };\r\n        case SET_CONFIRM_DIALOG_CANCEL:\r\n            return {\r\n                ...state,\r\n                isOpen: false,\r\n                action: false\r\n            };\r\n        case SET_CONFIRM_DIALOG_ACCEPT:\r\n            return {\r\n                ...state,\r\n                isOpen: false,\r\n                action: true\r\n            };\r\n        case SET_CONFIRM_DIALOG_RESET_ACCEPT:\r\n            return {\r\n                ...state,\r\n                action: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getDialogConfirmOpen = state => state.dialogConfirm.isOpen;\r\nexport const getDialogConfirmData = state => state.dialogConfirm.data;\r\nexport const getDialogConfirmAction = state => state.dialogConfirm.action;","import { SET_OPEN_SNACKBAR, SET_CLOSE_SNACKBAR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    isOpen: false,\r\n    data: {\r\n        variant: \"\",\r\n        message: \"\"\r\n    }\r\n};\r\n\r\nexport function snackbarReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_OPEN_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                isOpen: true,\r\n                data: action.data\r\n            };\r\n        case SET_CLOSE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                isOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getSnackbarOpen = state => state.snackbar.isOpen;\r\nexport const getSnackbarData = state => state.snackbar.data;","import { SET_ADD_POST_COMMENT_PENDING, SET_ADD_POST_COMMENT_DATA, SET_ADD_POST_COMMENT_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function addPostCommentReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_ADD_POST_COMMENT_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_ADD_POST_COMMENT_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_ADD_POST_COMMENT_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getAddPostCommentPending = state => state.addPostComment.pending;\r\nexport const getAddPostCommentData = state => state.addPostComment.data;","import { SET_UPDATE_POST_COMMENT_PENDING, SET_UPDATE_POST_COMMENT_DATA, SET_UPDATE_POST_COMMENT_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function updatePostCommentReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_UPDATE_POST_COMMENT_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_UPDATE_POST_COMMENT_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_UPDATE_POST_COMMENT_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getUpdatePostCommentPending = state => state.updatePostComment.pending;\r\nexport const getUpdatePostCommentData = state => state.updatePostComment.data;","import { combineReducers } from \"redux\";\r\n\r\nimport { appThemeReducer } from \"./appThemeReducer\";\r\nimport { languageReducer } from \"./languageReducer\";\r\nimport { snackbarReducer } from \"./snackbarReducer\";\r\nimport { dialogConfirmReducer } from \"./dialogConfirmReducer\";\r\nimport { authDataReducer } from \"./authReducer\";\r\nimport { technicsReducer } from \"./technicsReducer\";\r\nimport { tagsReducer } from \"./tagsReducer\";\r\nimport { userPostsReducer } from \"./userPostsReducer\";\r\nimport { addPostReducer } from \"./addPostReducer\";\r\nimport { updatePostReducer } from \"./updatePostReducer\";\r\nimport { deletePostReducer } from \"./deletePostReducer\";\r\nimport { postCommentsReducer } from \"./postCommentsReducer\";\r\nimport { addPostCommentReducer } from \"./addPostCommentReducer\";\r\nimport { updatePostCommentReducer } from \"./updatePostCommentReducer\";\r\nimport { searchIconReducer } from \"./searchIconReducer\";\r\nimport { addLocationReducer } from \"./addLocationReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    appTheme: appThemeReducer,\r\n    language: languageReducer,\r\n    snackbar: snackbarReducer,\r\n    dialogConfirm: dialogConfirmReducer,\r\n    authData: authDataReducer,\r\n    technics: technicsReducer,\r\n    tags: tagsReducer,\r\n    userPosts: userPostsReducer,\r\n    addPost: addPostReducer,\r\n    updatePost: updatePostReducer,\r\n    deletePost: deletePostReducer,\r\n    postComments: postCommentsReducer,\r\n    addPostComment: addPostCommentReducer,\r\n    updatePostComment: updatePostCommentReducer,\r\n    searchIcon: searchIconReducer,\r\n    addLocation: addLocationReducer\r\n});","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));","import ruDict from \"./ru\";\r\nimport enDict from \"./en\";\r\n\r\nexport default {\r\n    ru: ruDict,\r\n    en: enDict\r\n}","export default {\r\n    texts: {\r\n        SUCCESS: \"Успешно\",\r\n        Wellcome: \"Добро пожаловать\",\r\n\r\n        SignPageText1: \"Приветсвую, путешественник!\",\r\n        SignPageText2: \"Данный ресурс создан для тех, кто хочет получить потрясающий опыт осознанных сновидений! Исптытать невероятные эмоции и глубже познать себя.\",\r\n        SignPageText3: \"Мы рады видеть тебя здесь!\",\r\n        Loading: \"Загрузка\",\r\n\r\n        Email: \"Эл. почта\",\r\n        Password: \"Пароль\",\r\n        Nickname: \"Никнейм\",\r\n\r\n        Settings: \"Настройки\",\r\n        Editing: \"Редактирование\",\r\n\r\n        Title: \"Заголовок\",\r\n        Date: \"Дата\",\r\n        Description: \"Описание\",\r\n        Locations: \"Локации\",\r\n        Technics: \"Техники\",\r\n\r\n        Filter: \"Фильтр\",\r\n        Sort: \"Сортировка\",\r\n\r\n        CancelEditing: \"Отменить редактирование\",\r\n        CancelCreating: \"Отменить создание\",\r\n        DataWillLost: \"Все несохраненные данные будут удалены.\",\r\n\r\n        DeleteTitle: \"Удалить\",\r\n        DeleteCommentMessage: \"Вы действительно хотите удалить комментарий?\",\r\n        DeletePostMessage: \"Вы действительно хотите удалить сон?\",\r\n\r\n        Dream: \"Сон\",\r\n        LucidDream: \"Осознанный сон\",\r\n        RegularDream: \"Простой сон\",\r\n\r\n        Realistic: \"Реалистичность\",\r\n\r\n        UsersCanRead: \"Другие пользователи могут читать ваш сон\",\r\n        UsersCantRead: \"Другие пользователи не могут читать ваш сон\",\r\n\r\n        AddComment: \"Добавить комментарий\",\r\n        DeletedComment: \"Комментарий удален\",\r\n        NotHaveComments: \"Нет комментариев\",\r\n\r\n        Ru: \"рус\",\r\n        En: \"анг\",\r\n\r\n        FindIcon: \"Поиск иконки\",\r\n        Icon: \"Иконка\",\r\n        IconColor: \"Цвет иконки\",\r\n        FindIcon0: \"Ищем иконку\",\r\n        FindIcon1: \"До сих пор ищем иконку\",\r\n        FindIcon2: \"Продолжаем искать\",\r\n        FindIcon3: \"Да где же ты?\",\r\n        FindIcon4: \"Вот почти почти...\",\r\n    },\r\n    buttons: {\r\n        SignIn: \"Вход\",\r\n        SignUp: \"Регистрация\",\r\n        LogOut: \"Выход\",\r\n\r\n        Read: \"Читать\",\r\n\r\n        Back: \"Назад\",\r\n        Cancel: \"Отмена\",\r\n        Close: \"Закрыть\",\r\n        Reset: \"Сброс\",\r\n        Accept: \"Принять\",\r\n\r\n        Reply: \"Ответить\",\r\n\r\n        Edit: \"Редактировать\",\r\n        Save: \"Сохранить\",\r\n        Add: \"Добавить\",\r\n        Delete: \"Удалить\",\r\n\r\n        Main: \"Главная\",\r\n        MyDreams: \"Мои сны\",\r\n        AddDream: \"Добавить сон\",\r\n        AddLocation: \"Добавить локацию\",\r\n        Technics: \"Техники\",\r\n    },\r\n    errors: {\r\n        CREATE_ERROR: \"CREATE_ERROR\",\r\n        RETRIEVE_ERROR: \"RETRIEVE_ERROR\",\r\n\r\n        SIGN_UP_ERROR: \"SIGN_UP_ERROR\",\r\n\r\n        UPDATE_ERROR: \"Ошибка обновления\",\r\n        DELETE_ERROR: \"DELETE_ERROR\",\r\n\r\n        USER_NOT_FOUND: \"Неверный логин или пароль\",\r\n        EMAIL_IS_BUSY: \"EMAIL_IS_BUSY\",\r\n        INVALID_EMAIL: \"INVALID_EMAIL\",\r\n\r\n        INVALID_PASSWORD: \"Неверный логин или пароль\",\r\n        EMPTY_PASSWORD: \"Пустое поле пароля\",\r\n        EMPTY_LOGIN: \"Пустое поле эл. почты\",\r\n        EMPTY_NICKNAME: \"EMPTY_NICKNAME\",\r\n        NICKNAME_IS_BUSY: \"NICKNAME_IS_BUSY\",\r\n\r\n        UPDATE_USER_ERROR: \"UPDATE_USER_ERROR\",\r\n        UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\",\r\n\r\n        NO_TOKEN_PROVIDED: \"NO_TOKEN_PROVIDED\",\r\n        INVALID_TOKEN: \"INVALID_TOKEN\",\r\n\r\n        EMPTY_TITLE: \"Пустой заголовок\",\r\n        EMPTY_DESCRIPTION: \"EMPTY_DESCRIPTION\",\r\n        NO_ICON: \"Не выбрана иконка\",\r\n        EMPTY_DREAM: \"Пустое поле сна\",\r\n\r\n        DELETED: \"DELETED\",\r\n\r\n        ENGLISH_WORDS_ONLY: \"Используйте только английские слова\"\r\n    }\r\n}\r\n","export default {\r\n    texts: {\r\n        SUCCESS: \"Success\",\r\n        Wellcome: \"Wellcome\",\r\n\r\n        SignPageText1: \"Hello, traveler!\",\r\n        SignPageText2: \"This resource is made for ppl who want to experience the joy as lucid dreaming, feel indescribable emotions again new exp-ce.\",\r\n        SignPageText3: \"We warning welcome you here!\",\r\n        Loading: \"Loading\",\r\n\r\n        Email: \"Email\",\r\n        Password: \"Password\",\r\n        Nickname: \"Nickname\",\r\n\r\n        Settings: \"Settings\",\r\n        Editing: \"Editing\",\r\n\r\n        Title: \"Title\",\r\n        Date: \"Date\",\r\n        Description: \"Description\",\r\n        Locations: \"Locations\",\r\n        Technics: \"Technics\",\r\n\r\n        Filter: \"Filter\",\r\n        Sort: \"Sort\",\r\n\r\n        CancelEditing: \"Cancel editing\",\r\n        CancelCreating: \"Cancel creating\",\r\n        DataWillLost: \"All unsaved data will be deleted.\",\r\n\r\n        DeleteTitle: \"Delete\",\r\n        DeleteCommentMessage: \"Are you sure delete this comment?\",\r\n        DeletePostMessage: \"Are you sure delete this dream?\",\r\n\r\n        Dream: \"Dream\",\r\n        LucidDream: \"Lucid dream\",\r\n        RegularDream: \"Regular dream\",\r\n\r\n        Realistic: \"Realistic\",\r\n\r\n        UsersCanRead: \"Other users can read your dream\",\r\n        UsersCantRead: \"Other users cant read your dream\",\r\n\r\n        AddComment: \"Add comment\",\r\n        DeletedComment: \"Comment deleted\",\r\n        NotHaveComments: \"Not have comments\",\r\n\r\n        Ru: \"rus\",\r\n        En: \"eng\",\r\n\r\n        FindIcon: \"Find icon\",\r\n        Icon: \"Icon\",\r\n        IconColor: \"Icon color\",\r\n        FindIcon0: \"Looking for an icon\",\r\n        FindIcon1: \"До сих пор ищем иконку\",\r\n        FindIcon2: \"Still looking for an icon\",\r\n        FindIcon3: \"Where are you?\",\r\n        FindIcon4: \"That's almost ...\",\r\n    },\r\n    buttons: {\r\n        SignIn: \"Sign in\",\r\n        SignUp: \"Sign up\",\r\n        LogOut: \"Log out\",\r\n\r\n        Read: \"Read\",\r\n\r\n        Back: \"Back\",\r\n        Cancel: \"Cancel\",\r\n        Close: \"Close\",\r\n        Reset: \"Reset\",\r\n        Accept: \"Accept\",\r\n\r\n        Reply: \"Reply\",\r\n\r\n        Edit: \"Edit\",\r\n        Save: \"Save\",\r\n        Add: \"Add\",\r\n        Delete: \"Delete\",\r\n\r\n        Main: \"Main\",\r\n        MyDreams: \"My dreams\",\r\n        AddDream: \"Add dream\",\r\n        AddLocation: \"Add location\",\r\n        Technics: \"Technics\",\r\n    },\r\n    errors: {\r\n        CREATE_ERROR: \"CREATE_ERROR\",\r\n        RETRIEVE_ERROR: \"RETRIEVE_ERROR\",\r\n\r\n        SIGN_UP_ERROR: \"SIGN_UP_ERROR\",\r\n\r\n        UPDATE_ERROR: \"Update error\",\r\n        DELETE_ERROR: \"DELETE_ERROR\",\r\n\r\n        USER_NOT_FOUND: \"Invalid login or password\",\r\n        EMAIL_IS_BUSY: \"EMAIL_IS_BUSY\",\r\n        INVALID_EMAIL: \"INVALID_EMAIL\",\r\n\r\n        INVALID_PASSWORD: \"Invalid login or password\",\r\n        EMPTY_PASSWORD: \"Empty password\",\r\n        EMPTY_LOGIN: \"Empty email\",\r\n        EMPTY_NICKNAME: \"EMPTY_NICKNAME\",\r\n        NICKNAME_IS_BUSY: \"NICKNAME_IS_BUSY\",\r\n\r\n        UPDATE_USER_ERROR: \"UPDATE_USER_ERROR\",\r\n        UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\",\r\n\r\n        NO_TOKEN_PROVIDED: \"NO_TOKEN_PROVIDED\",\r\n        INVALID_TOKEN: \"INVALID_TOKEN\",\r\n\r\n        EMPTY_TITLE: \"Пустой заголовок\",\r\n        EMPTY_DESCRIPTION: \"EMPTY_DESCRIPTION\",\r\n        NO_ICON: \"Icon not change\",\r\n        EMPTY_DREAM: \"Пустое поле сна\",\r\n\r\n        DELETED: \"DELETED\",\r\n\r\n        ENGLISH_WORDS_ONLY: \"Use only english words\"\r\n    }\r\n}","import { SET_LANGUAGE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    lang: \"en\"\r\n};\r\n\r\nexport function languageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                lang: action.lang\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getLanguage = state => state.language.lang;","import { SET_USER_DATA, SET_USER_LOADING, RESET_USER_DATA } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function authDataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                pending: true\r\n            };\r\n        case RESET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                pending: false,\r\n                data: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getAuth = state => state.authData.isAuth;\r\nexport const getAuthPending = state => state.authData.pending;\r\nexport const getAuthData = state => state.authData.data;","import { SET_THEME } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    theme: {\r\n        palette: {\r\n            type: \"dark\",\r\n            primary: {\r\n                main: \"#ffffff\"\r\n            },\r\n            secondary: {\r\n                main: \"#f50057\"\r\n            },\r\n            error: {\r\n                main: \"#cc0000\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function appThemeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_THEME:\r\n            return {\r\n                ...state,\r\n                palette: action.palette\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getThemePalette = state => state.appTheme.theme;","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();","import jwt_decode from \"jwt-decode\";\r\n\r\nimport store from \"../store\";\r\nimport { setUserData, resetUserData } from \"../actions/actions\";\r\n\r\nexport function checkToken() {\r\n    if (localStorage.token) {\r\n        const decoded = jwt_decode(localStorage.token);\r\n        store.dispatch(setUserData(decoded));\r\n        if (decoded.exp < Date.now() / 1000) {\r\n            alert(\"Токен просрочен. Пожалуйста, перезайдите на сайт.\");\r\n            return false;\r\n        }\r\n        else\r\n            return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function setToken(token) {\r\n    localStorage.setItem(\"token\", token);\r\n    return jwt_decode(token);\r\n}\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(\"token\");\r\n    store.dispatch(resetUserData());\r\n}","import { SET_TECHNICS_PENDING, SET_TECHNICS_DATA, SET_TECHNICS_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function technicsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_TECHNICS_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_TECHNICS_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_TECHNICS_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getTechnicsPending = state => state.technics.pending;\r\nexport const getTechnicsData = state => state.technics.data;","import { SET_USER_POSTS_PENDING, SET_USER_POSTS_DATA, SET_USER_POSTS_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function userPostsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_USER_POSTS_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_USER_POSTS_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_USER_POSTS_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getUserPostsPending = state => state.userPosts.pending;\r\nexport const getUserPostsData = state => state.userPosts.data;","import { SET_TAGS_PENDING, SET_TAGS_DATA, SET_TAGS_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function tagsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_TAGS_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_TAGS_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_TAGS_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getTagsPending = state => state.tags.pending;\r\nexport const getTagsData = state => state.tags.data;","import { SET_POST_COMMENTS_PENDING, SET_POST_COMMENTS_DATA, SET_POST_COMMENTS_ERROR, CLEAR_POST_COMMENTS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function postCommentsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_POST_COMMENTS_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_POST_COMMENTS_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_POST_COMMENTS_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        case CLEAR_POST_COMMENTS:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getPostCommentsPending = state => state.postComments.pending;\r\nexport const getPostCommentsData = state => state.postComments.data;","import { SET_ADD_POST_PENDING, SET_ADD_POST_DATA, SET_ADD_POST_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function addPostReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_ADD_POST_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_ADD_POST_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_ADD_POST_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getAddPostPending = state => state.addPost.pending;\r\nexport const getAddPostData = state => state.addPost.data;","import { SET_UPDATE_POST_PENDING, SET_UPDATE_POST_DATA, SET_UPDATE_POST_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function updatePostReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_UPDATE_POST_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_UPDATE_POST_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_UPDATE_POST_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getUpdatePostPending = state => state.updatePost.pending;\r\nexport const getUpdatePostData = state => state.updatePost.data;","import { SET_DELETE_POST_PENDING, SET_DELETE_POST_DATA, SET_DELETE_POST_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function deletePostReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_DELETE_POST_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_DELETE_POST_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_DELETE_POST_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getDeletePostPending = state => state.deletePost.pending;\r\nexport const getDeletePostData = state => state.deletePost.data;","import { SET_SEARCH_ICON_PENDING, SET_SEARCH_ICON_DATA, SET_SEARCH_ICON_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function searchIconReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_SEARCH_ICON_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_SEARCH_ICON_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_SEARCH_ICON_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getSearchIconPending = state => state.searchIcon.pending;\r\nexport const getSearchIconData = state => state.searchIcon.data;","import { SET_ADD_LOCATION_PENDING, SET_ADD_LOCATION_DATA, SET_ADD_LOCATION_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    data: {}\r\n};\r\n\r\nexport function addLocationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_ADD_LOCATION_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            };\r\n        case SET_ADD_LOCATION_DATA:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: action.data\r\n            };\r\n        case SET_ADD_LOCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getAddLocationPending = state => state.addLocation.pending;\r\nexport const getAddLocationData = state => state.addLocation.data;"],"sourceRoot":""}